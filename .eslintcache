[{"E:\\Files\\ProMech\\fabhubs\\src\\components\\DropDown.js":"1","E:\\Files\\ProMech\\fabhubs\\src\\reportWebVitals.js":"2","E:\\Files\\ProMech\\fabhubs\\src\\components\\RequestCode.js":"3","E:\\Files\\ProMech\\fabhubs\\src\\components\\Register.js":"4","E:\\Files\\ProMech\\fabhubs\\src\\components\\Login.js":"5","E:\\Files\\ProMech\\fabhubs\\src\\components\\Routing.js":"6","E:\\Files\\ProMech\\fabhubs\\src\\components\\navBar.js":"7","E:\\Files\\ProMech\\fabhubs\\src\\components\\dragDrop.js":"8","E:\\Files\\ProMech\\fabhubs\\src\\components\\OTPVerification.js":"9","E:\\Files\\ProMech\\fabhubs\\src\\index.js":"10","E:\\Files\\ProMech\\fabhubs\\src\\components\\aboutUs.js":"11","E:\\Files\\ProMech\\fabhubs\\src\\components\\Button.js":"12","E:\\Files\\ProMech\\fabhubs\\src\\components\\placeOrder.js":"13","E:\\Files\\ProMech\\fabhubs\\src\\components\\NewQuote.js":"14","E:\\Files\\ProMech\\fabhubs\\src\\App.js":"15","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\index.js":"16","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\App.js":"17","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\3d-printing\\Blog.js":"18","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\Demo.js":"19","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\footer.js":"20","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\ResetPassword.js":"21","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\Register.js":"22","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\GlobalFunction.js":"23","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\inputFeatureProject.js":"24","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\EditFeatureProjectList.js":"25","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\ManufacturerViewProfile.js":"26","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\ChangePass.js":"27","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\customer\\UserProfile.js":"28","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\vacuum-forming\\MainFeaturedPost.js":"29","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\vacuum-forming\\FeaturedPost.js":"30","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\Dropzone.js":"31","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\card.js":"32","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\orderstatus\\OrderStatusEdit.js":"33","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\StarRating.js":"34","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\Alert.js":"35","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\Location.js":"36","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\vacuum-forming\\Blog.js":"37","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\ManufacturerSignup.js":"38","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\Homepage.js":"39","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\Routing.js":"40","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\navBar.js":"41","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\ProtectedRoute.js":"42","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\validation.js":"43","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\OTPVerification.js":"44","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\OpenStreetMap.js":"45","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\EditFeatureProject.js":"46","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\MakerProfileEdit.js":"47","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\orderstatus\\CustomerOrderStatus.js":"48","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\3d-printing\\FeaturedPost.js":"49","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\Button.js":"50","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\MfgProcessViewSelected.js":"51","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\knowledgebank\\data.js":"52","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\starrating\\StarRating.js":"53","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\ProgressBar.js":"54","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\DropDown.js":"55","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\newquote\\HubListArea.js":"56","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\FeatureProjectViewPage.js":"57","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\FeatureProjectList.js":"58","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\reportWebVitals.js":"59","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\ForgotPassword.js":"60","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\MakerProfile.js":"61","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\knowledgebank\\KnowledgeBank1.js":"62","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\3d-printing\\MainFeaturedPost.js":"63","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\ProductionCapabilities.js":"64","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\knowledgebank\\FeaturedPost.js":"65","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\orderstatus\\OrderSpecView.js":"66","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\newquote\\FabricationProcessSelect.js":"67","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\starrating\\RatingProgressView.js":"68","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\technology.js":"69","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\RequestCode.js":"70","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\aboutUs.js":"71","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\Login.js":"72","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\Modal.js":"73","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\MfgHubsViewPage.js":"74","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\customer\\UserProfileEdit.js":"75","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\ModalDelete.js":"76","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\OtherServices.js":"77","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\newquote\\NewQuote.js":"78","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\orderstatus\\ManufacturerOrderStatus.js":"79","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\TextBox.js":"80","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\knowledgebank\\MainFeaturedPost.js":"81"},{"size":2951,"mtime":1608269511198,"results":"82","hashOfConfig":"83"},{"size":362,"mtime":499162500000,"results":"84","hashOfConfig":"83"},{"size":503,"mtime":1607685724000,"results":"85","hashOfConfig":"83"},{"size":9725,"mtime":1608625333877,"results":"86","hashOfConfig":"83"},{"size":5616,"mtime":1608625353680,"results":"87","hashOfConfig":"83"},{"size":1144,"mtime":1608538458969,"results":"88","hashOfConfig":"83"},{"size":3224,"mtime":1607685918000,"results":"89","hashOfConfig":"83"},{"size":3090,"mtime":1608793501318,"results":"90","hashOfConfig":"83"},{"size":1747,"mtime":1608622837524,"results":"91","hashOfConfig":"83"},{"size":584,"mtime":1607589858000,"results":"92","hashOfConfig":"83"},{"size":169,"mtime":1607582972000,"results":"93","hashOfConfig":"83"},{"size":730,"mtime":1607675874000,"results":"94","hashOfConfig":"83"},{"size":1606,"mtime":1608564223243,"results":"95","hashOfConfig":"83"},{"size":4706,"mtime":1608790433156,"results":"96","hashOfConfig":"83"},{"size":222,"mtime":1607411250000,"results":"97","hashOfConfig":"83"},{"size":571,"mtime":1618214379147,"results":"98","hashOfConfig":"99"},{"size":373,"mtime":1618993200270,"results":"100","hashOfConfig":"99"},{"size":4175,"mtime":1618214378985,"results":"101","hashOfConfig":"99"},{"size":2407,"mtime":1618214378993,"results":"102","hashOfConfig":"99"},{"size":11106,"mtime":1618894375013,"results":"103","hashOfConfig":"99"},{"size":6337,"mtime":1618921201111,"results":"104","hashOfConfig":"99"},{"size":20584,"mtime":1618921183973,"results":"105","hashOfConfig":"99"},{"size":3139,"mtime":1618917862396,"results":"106","hashOfConfig":"99"},{"size":26791,"mtime":1618920978848,"results":"107","hashOfConfig":"99"},{"size":12661,"mtime":1618990751231,"results":"108","hashOfConfig":"99"},{"size":28670,"mtime":1618921334009,"results":"109","hashOfConfig":"99"},{"size":7079,"mtime":1618920752014,"results":"110","hashOfConfig":"99"},{"size":11349,"mtime":1618990583287,"results":"111","hashOfConfig":"99"},{"size":1730,"mtime":1618214379147,"results":"112","hashOfConfig":"99"},{"size":2469,"mtime":1618214379147,"results":"113","hashOfConfig":"99"},{"size":8186,"mtime":1618214379076,"results":"114","hashOfConfig":"99"},{"size":10657,"mtime":1618991024408,"results":"115","hashOfConfig":"99"},{"size":4371,"mtime":1618921486484,"results":"116","hashOfConfig":"99"},{"size":1768,"mtime":1618214379116,"results":"117","hashOfConfig":"99"},{"size":286,"mtime":1618214379076,"results":"118","hashOfConfig":"99"},{"size":4609,"mtime":1618214379106,"results":"119","hashOfConfig":"99"},{"size":975,"mtime":1618823538290,"results":"120","hashOfConfig":"99"},{"size":45723,"mtime":1618990916954,"results":"121","hashOfConfig":"99"},{"size":10833,"mtime":1618990300049,"results":"122","hashOfConfig":"99"},{"size":9898,"mtime":1618990300062,"results":"123","hashOfConfig":"99"},{"size":16465,"mtime":1618991184963,"results":"124","hashOfConfig":"99"},{"size":551,"mtime":1618214379096,"results":"125","hashOfConfig":"99"},{"size":3997,"mtime":1618214379147,"results":"126","hashOfConfig":"99"},{"size":2738,"mtime":1618990942437,"results":"127","hashOfConfig":"99"},{"size":5917,"mtime":1618214379096,"results":"128","hashOfConfig":"99"},{"size":33546,"mtime":1618990726125,"results":"129","hashOfConfig":"99"},{"size":43712,"mtime":1618921312454,"results":"130","hashOfConfig":"99"},{"size":4379,"mtime":1618991513329,"results":"131","hashOfConfig":"99"},{"size":2137,"mtime":1618214378985,"results":"132","hashOfConfig":"99"},{"size":768,"mtime":1618214379076,"results":"133","hashOfConfig":"99"},{"size":7038,"mtime":1618214379116,"results":"134","hashOfConfig":"99"},{"size":3679,"mtime":1618894374970,"results":"135","hashOfConfig":"99"},{"size":4271,"mtime":1618214379136,"results":"136","hashOfConfig":"99"},{"size":466,"mtime":1618214379086,"results":"137","hashOfConfig":"99"},{"size":862,"mtime":1618214379076,"results":"138","hashOfConfig":"99"},{"size":4841,"mtime":1618894375051,"results":"139","hashOfConfig":"99"},{"size":13141,"mtime":1618990783034,"results":"140","hashOfConfig":"99"},{"size":9789,"mtime":1618920951965,"results":"141","hashOfConfig":"99"},{"size":375,"mtime":1618214379147,"results":"142","hashOfConfig":"99"},{"size":6313,"mtime":1618990869604,"results":"143","hashOfConfig":"99"},{"size":15843,"mtime":1618921265800,"results":"144","hashOfConfig":"99"},{"size":5716,"mtime":1618823439400,"results":"145","hashOfConfig":"99"},{"size":1727,"mtime":1618823508780,"results":"146","hashOfConfig":"99"},{"size":7782,"mtime":1618894374997,"results":"147","hashOfConfig":"99"},{"size":1097,"mtime":1618894374920,"results":"148","hashOfConfig":"99"},{"size":3954,"mtime":1618214379134,"results":"149","hashOfConfig":"99"},{"size":5496,"mtime":1618921408310,"results":"150","hashOfConfig":"99"},{"size":556,"mtime":1618214379136,"results":"151","hashOfConfig":"99"},{"size":1377,"mtime":1618214379106,"results":"152","hashOfConfig":"99"},{"size":2057,"mtime":1618217546079,"results":"153","hashOfConfig":"99"},{"size":1491,"mtime":1618214379096,"results":"154","hashOfConfig":"99"},{"size":11968,"mtime":1618920854543,"results":"155","hashOfConfig":"99"},{"size":1634,"mtime":1618214379084,"results":"156","hashOfConfig":"99"},{"size":7723,"mtime":1618921355586,"results":"157","hashOfConfig":"99"},{"size":30034,"mtime":1618920903845,"results":"158","hashOfConfig":"99"},{"size":4027,"mtime":1618920987572,"results":"159","hashOfConfig":"99"},{"size":8385,"mtime":1618214379116,"results":"160","hashOfConfig":"99"},{"size":9233,"mtime":1618921437928,"results":"161","hashOfConfig":"99"},{"size":6231,"mtime":1618991525848,"results":"162","hashOfConfig":"99"},{"size":5379,"mtime":1618214379086,"results":"163","hashOfConfig":"99"},{"size":1972,"mtime":1618894374963,"results":"164","hashOfConfig":"99"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},"4mwokw",{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"172"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},"57wb7j",{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"203"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"218"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"218"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"218"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"203"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"218"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"218"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"218"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"238"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"218"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"203"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"203"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"203"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"218"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"218"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"238"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"218"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"218"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"203"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Files\\ProMech\\fabhubs\\src\\components\\DropDown.js",[],["360","361"],"E:\\Files\\ProMech\\fabhubs\\src\\reportWebVitals.js",[],"E:\\Files\\ProMech\\fabhubs\\src\\components\\RequestCode.js",[],["362","363"],"E:\\Files\\ProMech\\fabhubs\\src\\components\\Register.js",["364"],"E:\\Files\\ProMech\\fabhubs\\src\\components\\Login.js",["365"],"import React, { Component } from \"react\";\nimport Axios from \"axios\";\n\nexport default class Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null,\n    users: null,\n    hidden: true,\n  };\n\n  // componentDidMount() {\n  //   const users = localStorage.getItem(\"users\");\n  //   this.setState({ users: JSON.parse(users) });\n  //   //this.setState({ users });\n  // }\n\n  handleOnchange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  handleSignIn = (event) => {\n    event.preventDefault();\n\n    const { email, password, hidden } = this.state;\n    if (!email.length || !password.length) {\n      this.setState({ error: \"please fill out all the details\" });\n      return false;\n    } else {\n      Axios.post(\"http://localhost:3001/login\", {\n        email: email,\n        password: password,\n      }).then((response) => {\n        if (response.data.message && response.data.otp === 0) {\n          this.setState({ error: response.data.message, hidden: false });\n        } else if (response.data.message) {\n          this.setState({ error: response.data.message });\n        } else {\n          this.props.history.push(\"/\");\n          window.location.reload();\n        }\n      });\n      // users\n      //   ? users.filter((user) => {\n      //       if (user.email !== email || user.password !== password) {\n      //         this.setState({ error: \"Invalid creadetials\" });\n      //       } else {\n      //         const json = JSON.stringify(user);\n      //         localStorage.setItem(\"currentUser\", json);\n      //         this.props.history.push(\"/Home\");\n      //         window.location.reload();\n      //       }\n      //     })\n      //   : this.setState({ error: \"no user found\" });\n    }\n  };\n\n  onClickVerify = (event) => {\n    event.preventDefault();\n    Axios.post(\"http://localhost:3001/verify-login\").then((response) => {\n      if (response.data.message) {\n        this.props.history.push({\n          pathname: \"/verify\",\n          data: this.state.email, //send data to verify page\n        });\n      }\n    });\n  };\n\n  render() {\n    const { email, password, error, hidden } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row pt-5\">\n            <div className=\"col-lg-4\"></div>\n            <div className=\"col-lg-4\">\n              <div className=\"card card-body py-3 mb-3\">\n                <div className=\"text-center mb-3\">\n                  <i className=\"fa fa-user fa-2x text-primary\"></i>\n                </div>\n                <h3 className=\"text-center mb-4\">Sign In</h3>\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <form onSubmit={this.handleSignIn}>\n                      <div className=\"form-group mb-3\">\n                        <label\n                          className=\"font-weight-bold small\"\n                          htmlFor=\"email\"\n                        >\n                          Email address:\n                        </label>\n\n                        <input\n                          type=\"email\"\n                          id=\"email\"\n                          className=\"form-control\"\n                          placeholder=\"\"\n                          name=\"email\"\n                          onChange={this.handleOnchange}\n                          value={email}\n                        />\n                      </div>\n                      <div className=\"form-group mb-3\">\n                        <label\n                          className=\"font-weight-bold small\"\n                          htmlFor=\"password\"\n                        >\n                          Password:\n                        </label>\n\n                        <input\n                          id=\"password\"\n                          type=\"password\"\n                          className=\"form-control\"\n                          placeholder=\"\"\n                          name=\"password\"\n                          autoComplete=\"\"\n                          onChange={this.handleOnchange}\n                          value={password}\n                        />\n                      </div>\n                      <div className=\"text-center\">\n                        <button className=\"btn btn-primary btn-block\">\n                          SignIn\n                        </button>\n                      </div>\n                    </form>\n                    {error && (\n                      <p className=\"text-danger mt-3 mb-2 text-center\">\n                        {error}\n                      </p>\n                    )}\n                    <span className=\"text-center small d-flex justify-content-center text-primary\">\n                      <p\n                        type=\"button\"\n                        //href=\"verify\"\n                        hidden={hidden}\n                        onClick={this.onClickVerify}\n                      >\n                        Click here to verify\n                      </p>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <span className=\"text-center small\">\n                  Forget your password?{\" \"}\n                  <a href=\"password-reset\">Reset it Here</a>\n                </span>\n              </div>\n              <div className=\"card card-footer\">\n                <span className=\"text-center small\">\n                  Not have an account ? <a href=\"register\">Register</a>\n                </span>\n              </div>\n            </div>\n          </div>\n          <br />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n",["366","367"],"E:\\Files\\ProMech\\fabhubs\\src\\components\\Routing.js",[],"E:\\Files\\ProMech\\fabhubs\\src\\components\\navBar.js",["368","369","370","371","372"],"import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPageName: window.location.pathname,\r\n    };\r\n  }\r\n\r\n  GetPageName() {\r\n    const { currentPageName } = this.state;\r\n    if (currentPageName === \"/login\") return <>Login</>;\r\n    else if (currentPageName === \"/about-us\") return \"About Us\";\r\n    else if (currentPageName === \"/technology\") return \"Technology\";\r\n    else if (currentPageName === \"/new-quote\") return \"New Quote\";\r\n    else if (currentPageName === \"/register\") return \"SignUP\";\r\n    else if (currentPageName === \"/request-quote\") return \"Request Quote\";\r\n  }\r\n\r\n  render() {\r\n    const { currentPageName } = this.state;\r\n    let classes = \"navbar navbar-expand-lg\";\r\n    //for navigation bar\r\n    const navClassName =\r\n      currentPageName === \"/\"\r\n        ? classes + \" \" + \"navbar-dark bg-primary\"\r\n        : classes + \" \" + \"navbar-light bg-light\";\r\n\r\n    //for Button(navigationbar)\r\n    let btnclasses = \"btn btn-sm font-weight-bold\";\r\n    const navButton =\r\n      currentPageName === \"/\"\r\n        ? btnclasses + \" \" + \"btn-outline-light\"\r\n        : btnclasses + \" \" + \"btn-primary\";\r\n\r\n    //for navBrand class\r\n    let navBrandClasses = \"navbar-brand pr-3\";\r\n    const navBrandClass =\r\n      currentPageName === \"/\"\r\n        ? navBrandClasses\r\n        : navBrandClasses + \" \" + \"border-right border-dark\";\r\n\r\n    return (\r\n      <div>\r\n        <nav className={navClassName}>\r\n          <a className={navBrandClass} href=\"/\">\r\n            <span>FABHUBS</span>\r\n          </a>\r\n          <h5 className=\"nav-item mt-1\">{this.GetPageName()}</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"navbar-toggler\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav ml-auto mr-5\">\r\n              <li className=\"nav-item mt-1\">\r\n                <Button\r\n                  btnName=\"Get Instant Quote\"\r\n                  styleClass={navButton}\r\n                  visibility={currentPageName === \"/new-quote\" ? true : false}\r\n                  toggle=\"modal\"\r\n                  target=\"#placeOrderModal\"\r\n                />\r\n              </li>\r\n              <li className=\"nav-item pl-3\">\r\n                <a className=\"nav-link\" href=\"technology\">\r\n                  Technology\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item pl-3\">\r\n                <a className=\"nav-link\" href=\"about-us\">\r\n                  About Us\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item pl-3\">\r\n                <a className=\"nav-link\" href=\"login\">\r\n                  Login\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NavBar;\r\n","E:\\Files\\ProMech\\fabhubs\\src\\components\\dragDrop.js",["373","374","375","376"],"import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./dropZone.css\";\r\n\r\nfunction DragAndDrop({ title, fileNote, requirementNote, accept }) {\r\n  const [file, setFile] = useState([]);\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n\r\n  //#region examplecode\r\n\r\n  // const { getRootProps, getInputProps } = useDropzone({\r\n  //   accept: \"Image/*\",\r\n  //   onDrop: (acceptedFiles) => {\r\n  //     setFiles(\r\n  //       acceptedFiles.map((file) =>\r\n  //         Object.assign(file, {\r\n  //           preview: URL.createObjectURL(file),\r\n  //         })\r\n  //       )\r\n  //     );\r\n  //   },\r\n  // });\r\n\r\n  // const images = file.map((file) => (\r\n  //   <div key={file.name}>\r\n  //     <div>\r\n  //       <img src={file.preview} style={{ width: \"500px\" }} alt=\"preview\" />\r\n  //     </div>\r\n  //   </div>\r\n  // ));\r\n  //#endregion\r\n\r\n  const onDrop = (acceptedFiles) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", acceptedFiles[0]);\r\n\r\n    try {\r\n      Axios.post(\"http://localhost:3001/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }).then((response) => {\r\n        const { fileName, filePath } = response.data;\r\n        setUploadedFile({ fileName, filePath });\r\n      });\r\n    } catch {}\r\n  };\r\n\r\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n    maxFiles: 1,\r\n    onDrop,\r\n    accept: \"Image/*\",\r\n  });\r\n\r\n  const files = acceptedFiles.map((file) => (\r\n    <li key={file.name}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-sm\">\r\n          <h4>{title}</h4>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3 ml-auto\">\r\n        <div className=\"col-sm\">\r\n          <div {...getRootProps({ className: \"uploadParts\" })}>\r\n            <input {...getInputProps()} />\r\n            <div>\r\n              <p className=\"mt-3\">\r\n                Drag 'n' drop some files here, or click to select files\r\n              </p>\r\n              <div className=\" d-flex justify-content-center text-center mt-2\">\r\n                <p>\r\n                  <span className=\"font-weight-bold text-dark\">\r\n                    Supported files:\r\n                  </span>\r\n                  <br />\r\n                  {fileNote}\r\n                  <br />\r\n                  {requirementNote}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <aside className=\"container\">\r\n        <h5 className=\"mt-2\">Uploaded File</h5>\r\n        <ul>{files}</ul>\r\n      </aside>\r\n      {uploadedFile ? (\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-md-6 ml-auto\">\r\n            <h3>{uploadedFile.fileName}</h3>\r\n            <img style={{ width: \"100%\" }} src={uploadedFile.filePath} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DragAndDrop;\r\n","E:\\Files\\ProMech\\fabhubs\\src\\components\\OTPVerification.js",[],"E:\\Files\\ProMech\\fabhubs\\src\\index.js",[],"E:\\Files\\ProMech\\fabhubs\\src\\components\\aboutUs.js",[],"E:\\Files\\ProMech\\fabhubs\\src\\components\\Button.js",[],"E:\\Files\\ProMech\\fabhubs\\src\\components\\placeOrder.js",[],"E:\\Files\\ProMech\\fabhubs\\src\\components\\NewQuote.js",["377"],"E:\\Files\\ProMech\\fabhubs\\src\\App.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\index.js",[],["378","379"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\App.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\3d-printing\\Blog.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\Demo.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\footer.js",["380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400"],"import { imageOverlay } from 'leaflet';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './footer.css';\r\n\r\nimport Data from './Data.json';\r\n\r\nconst styles = {\r\n    height: '100px',\r\n    width: '100px',\r\n};\r\nconst Footer = () => {\r\n    const [shadow, setShadow] = useState('1px 2px 5px\t#A9A9A9');\r\n    const [flag, setFlag] = useState(false);\r\n    const onMouseEnter = () => {\r\n        setShadow('1px 3px 20px\t#A9A9A9');\r\n        //setColor(\"rgb(240,240,240)\");\r\n    };\r\n    const onMouseLeave = () => {\r\n        setShadow('1px 2px 5px\t#A9A9A9');\r\n        //setColor(\"\");\r\n    };\r\n    return (\r\n        <footer\r\n            id=\"about\"\r\n            className=\"bg-black\"\r\n            style={{ backgroundColor: 'rgba(16, 20, 10, 0.9)' }}\r\n        >\r\n            <div className=\"container  d-flex justify-content-center flex-column text-white \">\r\n                <h1 className=\"text-primary  d-flex justify-content-center  pt-4\">\r\n                    ABOUT US\r\n                </h1>\r\n                <p className=\"footer-text\" style={{ paddingLeft: '10px' }}>\r\n                    The Makerko is a web of production platform, an online\r\n                    marketplace that connects local producers and end-users.\r\n                    End-users will have the ability to request the production of\r\n                    a product via the platform.\r\n                    <br /> This platform addresses local challenges in Nepal\r\n                    around production, including: incorrect designs for\r\n                    manufacturing, obtaining a workable prototype, lack of\r\n                    access to design/manufacturing experts and marketing and\r\n                    communication gaps.\r\n                    <br /> The makerko platform will make the capabilities of\r\n                    local producers more visible to consumers, as the producers\r\n                    offer new products and innovations. Users will then have the\r\n                    ability to upload a work order (with a product design if\r\n                    applicable) and be connected with a local producer that will\r\n                    execute the work order.\r\n                    <br /> The platform also brings together idle machines,\r\n                    decentralized technology tools, global and remote expertise,\r\n                    diverse skill sets, and a growing supplier network, making\r\n                    the product development process more reliable for consumers.\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"container-fluid bg-black\">\r\n                <h2 className=\"text-primary  d-flex justify-content-center   pt-4 mb-4\">\r\n                    PARTNERS AND COLLABATORS\r\n                </h2>\r\n                <div className=\"row mt-4 pt-4 d-flex\">\r\n                    {console.log(Data)}\r\n                    {Data.map((item) => (\r\n                        <div className=\"col-md footer-column\">\r\n                            <a href={item.href} className=\"figure\">\r\n                                <img src={item.src} className=\"image-hover\" />\r\n                            </a>\r\n                        </div>\r\n                    ))}\r\n\r\n                    {/* <div className=\"col-md footer-column\">\r\n                        <a href=\"https://medium.com/covidaction\">\r\n                            <img\r\n                                src=\"/assests/covid_action.png\"\r\n                                className=\"githubIcon\"\r\n                                style={styles}\r\n                            />\r\n                        </a>\r\n                    </div>{' '}\r\n                    <div className=\"col-md footer-column\">\r\n                        <a href=\"https://medium.com/frontier-technologies-hub\">\r\n                            <img\r\n                                src=\"/assests/forntier.png\"\r\n                                className=\"githubIcon\"\r\n                                style={styles}\r\n                            />\r\n                        </a>\r\n                    </div>{' '}\r\n                    <div className=\"col-md footer-column\">\r\n                        <a href=\"https://www.ukaiddirect.org/\">\r\n                            <img\r\n                                src=\"/assests/uk_aid.png\"\r\n                                className=\"githubIcon\"\r\n                                style={styles}\r\n                            />\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"col-md footer-column\">\r\n                        <a href=\"https://www.imcworldwide.com/\">\r\n                            <img\r\n                                src=\"/assests/imc.png\"\r\n                                className=\"githubIcon\"\r\n                                style={styles}\r\n                            />\r\n                        </a>\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"row pt-5\">\r\n                    <div className=\"col-md-3 footer-column\">\r\n                        {/* <div className=\"logo text-center\">\r\n                          <img src={logo} className=\"\" alt=\"logo\" width=\"110\" />\r\n                      </div> */}\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3 footer-column\">\r\n                        <ul className=\"nav flex-column\">\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"footer-title\">\r\n                                    Capabilities\r\n                                </span>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    3D Printing\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    CNC Carving\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Laser Printing\r\n                                </a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">Frequently asked questions</a>\r\n            </li> */}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-3 footer-column\">\r\n                        <ul className=\"nav flex-column\">\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"footer-title\">Materials</span>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Mat One\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Mat Two\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Mat Three\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3 footer-column\">\r\n                        <ul className=\"nav flex-column\">\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"footer-title\">\r\n                                    Contact & Support\r\n                                </span>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <span className=\"nav-link\">\r\n                                    <i className=\"fas fa-phone\"></i>+97701546789\r\n                                </span>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\"><i className=\"fas fa-comments\"></i>Live chat</a>\r\n            </li> */}\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    <i className=\"fas fa-envelope\"></i>Contact\r\n                                    us\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    <i className=\"fas fa-star\"></i>Give feedback\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"text-center\">\r\n                    <i className=\"fas fa-ellipsis-h\"></i>\r\n                </div>\r\n\r\n                <div className=\"row text-center\">\r\n                    <div className=\"col-md-3 box\">\r\n                        <span className=\"copyright quick-links\">\r\n                            Copyright &copy; Your Website{' '}\r\n                            {new Date().getFullYear()}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"col-md-4 box offset-md-1\">\r\n                        <ul className=\"list-inline social-buttons\">\r\n                            <li className=\"list-inline-item\">\r\n                                <a href=\"#\">\r\n                                    <i className=\"fab fa-twitter\"></i>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"list-inline-item\">\r\n                                <a href=\"#\">\r\n                                    <i className=\"fab fa-facebook-f\"></i>\r\n                                </a>\r\n                            </li>\r\n                            {/*  <li className=\"list-inline-item\">\r\n              <a href=\"#\">\r\n              <i className=\"fab fa-linkedin-in\"></i>\r\n            </a>\r\n            </li> */}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-4 box\">\r\n                        <ul className=\"list-inline quick-links\">\r\n                            <li className=\"list-inline-item\">\r\n                                <a href=\"#\">Privacy Policy</a>\r\n                            </li>\r\n                            <li className=\"list-inline-item\">\r\n                                <a href=\"#\">Terms of Use</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\ResetPassword.js",["401","402","403"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\Register.js",["404","405","406"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Formik } from 'formik';\r\nimport 'react-phone-input-2/lib/bootstrap.css';\r\nimport './registrationPage.css';\r\nimport FormTextBox, { PasswordField } from '../global/TextBox';\r\n\r\nconst localIpUrl = require('local-ip-url');\r\nconst ipAddress = localIpUrl('public');\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            email: '',\r\n            password: '',\r\n            confirm_password: '',\r\n            error: '',\r\n            ischecked: false,\r\n        };\r\n        this.handleChecked = this.handleChecked.bind(this);\r\n    }\r\n    handleChecked() {\r\n        this.setState({ isChecked: !this.state.isChecked });\r\n    }\r\n\r\n    render() {\r\n        const { email, password, error, isChecked } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"registrationPage\">\r\n                    <div>\r\n                        <div className=\"card card-body\" id=\"registrationCard\">\r\n                            <div className=\"text-center mb-3\">\r\n                                <i className=\"fa fa-user fa-2x text-primary\"></i>\r\n                            </div>\r\n                            <h3 className=\"text-center mb-4 text-primary\">\r\n                                Create an account\r\n                            </h3>\r\n                            <hr />\r\n\r\n                            <div>\r\n                                <div>\r\n                                    <Formik\r\n                                        initialValues={{\r\n                                            email: '',\r\n                                            password: '',\r\n                                            firstName: '',\r\n                                            lastName: '',\r\n                                            phoneNumber: '',\r\n                                            confirm_password: '',\r\n                                            isChecked: false,\r\n                                        }}\r\n                                        validate={(values) => {\r\n                                            /*                       initialValues={{ email: \"\", password: \"\", firstname:\"\",lastname=\"\",phoneNumber=\"\",confirm_password=\"\" }}\r\n                      validate={(values) => { */\r\n                                            const errors = {};\r\n                                            if (!values.email) {\r\n                                                errors.email = 'Required';\r\n                                            } else if (\r\n                                                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\r\n                                                    values.email\r\n                                                )\r\n                                            ) {\r\n                                                errors.email =\r\n                                                    'Invalid email address';\r\n                                            }\r\n                                            if (!values.firstName) {\r\n                                                errors.firstName = 'Required';\r\n                                            }\r\n                                            if (!values.lastName) {\r\n                                                errors.lastName = 'Required';\r\n                                            }\r\n                                            if (values.password.length < 6) {\r\n                                                errors.password =\r\n                                                    'Password must contain atleast 6 letters';\r\n                                            } else if (\r\n                                                values.password !==\r\n                                                values.confirm_password\r\n                                            ) {\r\n                                                errors.confirm_password =\r\n                                                    'Password did not match';\r\n                                            } else if (!isChecked) {\r\n                                                errors.isChecked =\r\n                                                    'Please accept the terms of use to continue.';\r\n                                            }\r\n                                            return errors;\r\n                                        }}\r\n                                        onSubmit={(\r\n                                            values,\r\n                                            { setSubmitting }\r\n                                        ) => {\r\n                                            setTimeout(() => {\r\n                                                axios\r\n                                                    .post(\r\n                                                        `http://${window.host}/register`,\r\n                                                        {\r\n                                                            firstName:\r\n                                                                values.firstName,\r\n                                                            lastName:\r\n                                                                values.lastName,\r\n                                                            password:\r\n                                                                values.password,\r\n                                                            email: values.email,\r\n                                                            phoneNumber:\r\n                                                                values.phoneNumber,\r\n                                                        }\r\n                                                    )\r\n                                                    .then((response) => {\r\n                                                        if (\r\n                                                            response.data\r\n                                                                .message\r\n                                                        ) {\r\n                                                            this.setState({\r\n                                                                error:\r\n                                                                    response\r\n                                                                        .data\r\n                                                                        .message,\r\n                                                            });\r\n                                                        } else {\r\n                                                            this.props.history.push(\r\n                                                                {\r\n                                                                    pathname:\r\n                                                                        '/verify',\r\n                                                                    state: {\r\n                                                                        email:\r\n                                                                            values.email,\r\n                                                                    },\r\n                                                                    //send data to verify page\r\n                                                                }\r\n                                                            );\r\n                                                            window.location.reload();\r\n                                                            console.log(\r\n                                                                values.email\r\n                                                            );\r\n                                                        }\r\n                                                    });\r\n                                                //this.setState({ loading: false });\r\n                                                setSubmitting(false);\r\n                                            }, 100);\r\n                                        }}\r\n                                    >\r\n                                        {({\r\n                                            values,\r\n                                            errors,\r\n                                            touched,\r\n                                            handleSubmit,\r\n                                            isSubmitting,\r\n                                            /* and other goodies */\r\n                                        }) => (\r\n                                            <form onSubmit={handleSubmit}>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col\">\r\n                                                        <div>\r\n                                                            <FormTextBox\r\n                                                                placeholder=\"First name\"\r\n                                                                name=\"firstName\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col\">\r\n                                                        <div>\r\n                                                            <FormTextBox\r\n                                                                placeholder=\"Last name\"\r\n                                                                name=\"lastName\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col\">\r\n                                                        <div>\r\n                                                            <FormTextBox\r\n                                                                placeholder=\"Email Address\"\r\n                                                                name=\"email\"\r\n                                                                type=\"email\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col\">\r\n                                                        <div>\r\n                                                            <PasswordField\r\n                                                                placeholder=\"Password\"\r\n                                                                name=\"password\"\r\n                                                                type=\"password\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col\">\r\n                                                        <div>\r\n                                                            <PasswordField\r\n                                                                placeholder=\"Confirm Password\"\r\n                                                                name=\"confirm_password\"\r\n                                                                type=\"password\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col\">\r\n                                                        <div>\r\n                                                            <FormTextBox\r\n                                                                placeholder=\"City\"\r\n                                                                name=\"city\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col\">\r\n                                                        <div>\r\n                                                            <FormTextBox\r\n                                                                placeholder=\"State\"\r\n                                                                name=\"state\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col\">\r\n                                                        <div>\r\n                                                            <FormTextBox\r\n                                                                placeholder=\"Country\"\r\n                                                                name=\"country\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-3\">\r\n                                                    <div className=\"col-3\">\r\n                                                        <div>\r\n                                                            <FormTextBox\r\n                                                                type=\"tel\"\r\n                                                                placeholder=\"+977\"\r\n                                                                name=\"contryCode\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-5\">\r\n                                                        <div>\r\n                                                            <FormTextBox\r\n                                                                type=\"tel\"\r\n                                                                placeholder=\"Phone Number\"\r\n                                                                name=\"phoneNumber\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col d-flex justify-content-center\">\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n                                                            <input\r\n                                                                type=\"checkbox\"\r\n                                                                name=\"checkbox\"\r\n                                                                className=\"custom-control-input\"\r\n                                                                id=\"defaultUnchecked\"\r\n                                                                onChange={\r\n                                                                    this\r\n                                                                        .handleChecked\r\n                                                                }\r\n                                                            />\r\n                                                            <label\r\n                                                                className=\"custom-control-label\"\r\n                                                                for=\"defaultUnchecked\"\r\n                                                            >\r\n                                                                I agree with{' '}\r\n                                                                <Link to=\"/\">\r\n                                                                    terms of use\r\n                                                                </Link>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <span className=\"text-danger  text-center\">\r\n                                                                    {errors.isChecked &&\r\n                                                                        touched.isChecked &&\r\n                                                                        errors.isChecked}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col\">\r\n                                                        <div className=\"text-center\">\r\n                                                            <button\r\n                                                                disabled={\r\n                                                                    isSubmitting\r\n                                                                }\r\n                                                                className=\"btn btn-primary\"\r\n                                                                type=\"submit\"\r\n                                                            >\r\n                                                                Sign up\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        )}\r\n                                    </Formik>\r\n                                    {error && (\r\n                                        <p className=\"text-danger mb-2 text-center\">\r\n                                            {error}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-1\">\r\n                                <div className=\"col d-flex justify-content-center\">\r\n                                    <span className=\"text-center\">\r\n                                        Already have an account ?\r\n                                        <a href=\"Login\">\r\n                                            <span>Login</span>\r\n                                        </a>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Register;\r\n",["407","408"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\GlobalFunction.js",["409","410","411"],"import axios from 'axios';\r\nimport React from 'react';\r\n\r\nimport Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nconst localIpUrl = require('local-ip-url');\r\nconst ipAddress = localIpUrl('public');\r\n\r\nexport default function onGetInstantBtnClick() {\r\n    let showModal = '';\r\n    //const { loggedIn } = GetCookiesInfo();\r\n    var cookieData = cookies.get('userInfo');\r\n    if (cookieData) {\r\n        if (cookieData.loggedIn) {\r\n            return (showModal = '#placeOrderModal');\r\n        }\r\n    } else {\r\n        window.location.href = '/login';\r\n    }\r\n}\r\n\r\n//#region get user info from cookes\r\nexport function GetCookiesInfo() {\r\n    var cookieData = cookies.get('userInfo');\r\n    if (cookieData) {\r\n        var userStatus = cookieData.userStatus;\r\n        console.log(userStatus);\r\n\r\n        if (cookieData.userInfo) {\r\n            if (userStatus === 'client') {\r\n                return {\r\n                    userName: cookieData.userInfo[0].First_Name,\r\n                    email: cookieData.userInfo[0].Email,\r\n                    customerID: cookieData.userInfo[0].Customer_ID,\r\n                    loggedIn: cookieData.loggedIn,\r\n                    lastName: cookieData.userInfo[0].Last_Name,\r\n                    phoneNumber: cookieData.userInfo[0].Phone_Number,\r\n                    profileImage: cookieData.userInfo[0].Profile_Image,\r\n                    userStatus: userStatus,\r\n                    //userStatus: cookieData.userStatus,\r\n                };\r\n            } else {\r\n                return {\r\n                    userName: cookieData.userInfo[0].Company_Name,\r\n                    email: cookieData.userInfo[0].Email,\r\n                    manufacturerID: cookieData.userInfo[0].Manufacturer_ID,\r\n                    loggedIn: cookieData.loggedIn,\r\n                    CompanyName: cookieData.userInfo[0].Company_Name,\r\n                    contactPerson: cookieData.userInfo[0].Contact_Person,\r\n                    phoneNumber: cookieData.userInfo[0].Phone_Number,\r\n                    Website: cookieData.userInfo[0].Website,\r\n                    userStatus: userStatus,\r\n                    profileImage: cookieData.userInfo[0].Logo,\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n//#endregion\r\n\r\n//#region Get_Fabrication_Services\r\nexport function GetFabricationServices(fabricationService) {\r\n    axios\r\n        .post(`http://192.168.1.102:3001/fabricationservice`)\r\n        .then((response) => {\r\n            console.log('line-67', response);\r\n            if (response.data) {\r\n                fabricationService(null, response.data);\r\n            } else {\r\n                fabricationService('err', null);\r\n            }\r\n        });\r\n}\r\n//#endregion\r\n\r\n//#region Get_Material_From_Fabrication_Service\r\nexport function GetMaterialFromFabrication(serviceID, materials) {\r\n    axios\r\n        .post(`http://192.168.1.102:3001/materials`, {\r\n            fabricationID: serviceID,\r\n        })\r\n        .then((response) => {\r\n            if (response.data) {\r\n                materials(null, response.data);\r\n            } else materials('err', null);\r\n        });\r\n}\r\n//#endregion\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\inputFeatureProject.js",["412","413","414","415","416","417","418","419","420","421","422","423","424","425","426"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\EditFeatureProjectList.js",["427","428","429","430","431","432","433","434","435","436","437","438","439"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\ManufacturerViewProfile.js",["440","441","442","443","444","445","446","447","448","449"],"import React, { Component, useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faPhone,\r\n    faEnvelope,\r\n    faMapMarker,\r\n    faUser,\r\n    faChevronRight,\r\n    faChevronDown,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faChrome } from '@fortawesome/free-brands-svg-icons';\r\nimport axios from 'axios';\r\nimport StarRating, {\r\n    AverageRatingNum,\r\n    OverallRatings,\r\n    StarRatingAverage,\r\n    TotalRatings,\r\n} from '../starrating/StarRating';\r\nimport { OtherServices } from './OtherServices';\r\nimport MfgProcessViewSelected from './MfgProcessViewSelected';\r\n\r\nfunction ManufacturerViewProfile(props) {\r\n    const [data, setData] = useState();\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [filePath, setFilePath] = useState();\r\n    const [averageRating, setAverageRating] = useState();\r\n    const [totalRatings, setTotalRatings] = useState();\r\n    const [overallRatingArray, setOverallRatingArray] = useState();\r\n    const [otherServices, setOtherServices] = useState([]);\r\n    const { id } = props.match.params;\r\n\r\n    var [hubService, setHubService] = useState();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .post(`http://${window.host}/manufacturer/${id}`)\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    const { hub, services } = response.data;\r\n                    setData(hub[0]);\r\n                    setServiceList(services);\r\n                    if (hub[0].Other_Services) {\r\n                        setOtherServices(JSON.parse(hub[0].Other_Services));\r\n                    }\r\n\r\n                    const { fileName, filePath } = JSON.parse(hub[0].Logo);\r\n                    setFilePath(filePath);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .post(`http://${window.host}/manufacturer/${id}`)\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    const { hub, services } = response.data;\r\n                    // setCurrentHub(hub[0]);\r\n                    const hubService = services.map((service) => {\r\n                        console.log(service);\r\n                        const { Name, Material_Name, Service_ID } = service;\r\n                        var data = {\r\n                            fabricationService: {\r\n                                value: Service_ID,\r\n                                label: Name,\r\n                            },\r\n                            materialDetails: JSON.parse(Material_Name),\r\n                        };\r\n                        return data;\r\n                    });\r\n                    setHubService(hubService);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    //#region view_otherservices\r\n    const otherServiceList = otherServices.map((otherService, index) => {\r\n        const serviceName = otherService.serviceName;\r\n        const materials = otherService.materials;\r\n        return (\r\n            <div key={index} className=\"pl-4\">\r\n                <ul\r\n                    className=\"p-1 m-0 text-primary\"\r\n                    style={{ listStyle: 'none' }}\r\n                >\r\n                    <li>\r\n                        <OtherService\r\n                            service={serviceName}\r\n                            materials={materials}\r\n                        />\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    });\r\n    //#endregion\r\n\r\n    var src = '';\r\n    var services = serviceList.map((service, index) => {\r\n        const { Name } = service;\r\n        if (Name === 'CNC Carving') {\r\n            src = '/Service/CNCCarving.jpg';\r\n        } else if (Name === '3D Printing') {\r\n            src = '/Service/3dprinting.jpg';\r\n        } else if (Name === 'Laser Cutting') {\r\n            src = '/Service/LaserCutting.jpg';\r\n        }\r\n\r\n        return (\r\n            <div key={index}>\r\n                <div className=\"col\">\r\n                    <span className=\"mt-2 text-light\">\r\n                        <img\r\n                            src={src}\r\n                            style={{\r\n                                width: '140px',\r\n                                height: '140px',\r\n                                borderStyle: 'solid',\r\n                                borderColor: 'lightblue',\r\n                                borderWidth: '2px',\r\n                                borderRadius: '5px',\r\n                            }}\r\n                            alt=\"\"\r\n                        />\r\n                        <h6\r\n                            className=\"p-2\"\r\n                            style={{\r\n                                backgroundColor: 'grey',\r\n                                borderRadius: '5px',\r\n                                width: '140px',\r\n                                textAlign: 'center',\r\n                            }}\r\n                        >\r\n                            {Name}\r\n                        </h6>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {data && filePath && (\r\n                <div style={{ backgroundColor: 'lightgray' }}>\r\n                    <div\r\n                        className=\"pt-3 mt-3 d-flex justify-content-center\"\r\n                        style={{\r\n                            backgroundColor: 'white',\r\n                            boxShadow: '1px 2px 2px\t#A9A9A9',\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"d-flex align-items-end pb-3\"\r\n                            style={{\r\n                                backgroundImage: 'url(/coverpic.png)',\r\n                                height: '400px',\r\n                                width: '70rem',\r\n                                backgroundPosition: 'center',\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className=\"container\"\r\n                                style={{\r\n                                    backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n                                }}\r\n                            >\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div\r\n                                            style={{\r\n                                                width: '150px',\r\n                                                height: '130px',\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                src={filePath}\r\n                                                style={{\r\n                                                    width: '150px',\r\n                                                    height: '130px',\r\n                                                }}\r\n                                                alt=\"\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-sm text-white d-flex align-items-center\">\r\n                                            <h1>{data.Company_Name}</h1>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"mt-3 m-2\">\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    width: '100%',\r\n                                    height: '100px',\r\n                                    backgroundColor: 'white',\r\n                                    borderRadius: '5px',\r\n                                    boxShadow: '1px 2px 2px\t#A9A9A9',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'space-around',\r\n                                }}\r\n                            >\r\n                                <div>\r\n                                    <StarRatingView\r\n                                        averageRating={averageRating}\r\n                                        totalRatings={totalRatings}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div\r\n                                        className=\"row d-flex justify-content-center\"\r\n                                        style={{\r\n                                            fontWeight: 'bold',\r\n                                            fontSize: '1.2rem',\r\n                                        }}\r\n                                    >\r\n                                        Delivery:\r\n                                    </div>\r\n                                    <div className=\"row d-flex justify-content-center\">\r\n                                        Within 20km\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mr-2\">\r\n                                    <div\r\n                                        className=\"row d-flex justify-content-center\"\r\n                                        style={{\r\n                                            fontWeight: 'bold',\r\n                                            fontSize: '1.2rem',\r\n                                        }}\r\n                                    >\r\n                                        Location:\r\n                                    </div>\r\n                                    <div className=\"row d-flex justify-content-center\">\r\n                                        {data.Address}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row m-auto\">\r\n                            <div className=\"col-lg-4 m-2\">\r\n                                <div className=\"row\">\r\n                                    <div\r\n                                        style={{\r\n                                            width: '100%',\r\n                                            height: 'auto',\r\n                                            backgroundColor: 'white',\r\n                                            borderRadius: '5px',\r\n                                            boxShadow: '1px 2px 2px\t#A9A9A9',\r\n                                        }}\r\n                                    >\r\n                                        <div className=\"row m-auto\">\r\n                                            <h4 className=\"text-dark pl-3 pt-3 font-weight-bold\">\r\n                                                Fabrication Services\r\n                                            </h4>\r\n                                        </div>\r\n                                        <div className=\"row pb-2 d-flex justify-content-center\">\r\n                                            {services}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {otherServices.length > 0 && (\r\n                                    <div className=\"row mt-3\">\r\n                                        <div\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: 'auto',\r\n                                                backgroundColor: 'white',\r\n                                                borderRadius: '5px',\r\n                                                boxShadow: '1px 2px 2px\t#A9A9A9',\r\n                                                paddingBottom: 5,\r\n                                            }}\r\n                                        >\r\n                                            <div className=\"row m-auto\">\r\n                                                <h4 className=\"text-dark pl-3 pt-3 font-weight-bold\">\r\n                                                    Other Services:\r\n                                                </h4>\r\n                                            </div>\r\n\r\n                                            <div className=\"row m-auto d-flex flex-column\">\r\n                                                {otherServiceList}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"row mt-3\">\r\n                                    <div\r\n                                        style={{\r\n                                            width: '100%',\r\n                                            height: 'auto',\r\n                                            backgroundColor: 'white',\r\n                                            borderRadius: '5px',\r\n                                            boxShadow: '1px 2px 2px\t#A9A9A9',\r\n                                        }}\r\n                                    >\r\n                                        <div className=\"row m-auto pl-3 pt-3\">\r\n                                            <h4 className=\"font-weight-bold\">\r\n                                                Contact Information\r\n                                            </h4>\r\n                                        </div>\r\n                                        <ContactInformationView\r\n                                            icon={faPhone}\r\n                                            label=\"Phone\"\r\n                                            info={data.Phone_Number}\r\n                                        />\r\n                                        <ContactInformationView\r\n                                            icon={faEnvelope}\r\n                                            label=\"Email\"\r\n                                            info={data.Email}\r\n                                        />\r\n                                        <ContactInformationView\r\n                                            icon={faChrome}\r\n                                            label=\"Website\"\r\n                                            info=\"www.promechminds.com\"\r\n                                        />\r\n                                        <ContactInformationView\r\n                                            icon={faMapMarker}\r\n                                            label=\"Location\"\r\n                                            info={data.Address}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg mt-2 m-2\">\r\n                                <div className=\"row\">\r\n                                    <div\r\n                                        style={{\r\n                                            width: '100%',\r\n                                            height: 'auto',\r\n                                            backgroundColor: 'white',\r\n                                            borderRadius: '5px',\r\n                                            boxShadow: '1px 2px 2px\t#A9A9A9',\r\n                                        }}\r\n                                    >\r\n                                        <h4 className=\"text-dark pl-3 pt-3 font-weight-bold\">\r\n                                            About {data.Company_Name}\r\n                                        </h4>\r\n                                        <p\r\n                                            className=\"pl-3 pr-3 pb-3\"\r\n                                            style={{\r\n                                                fontSize: 14,\r\n                                                textAlign: 'justify',\r\n                                            }}\r\n                                        >\r\n                                            {data.Brief_Description}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row border mt-3\">\r\n                                    <div\r\n                                        style={{\r\n                                            width: '100%',\r\n                                            height: 'auto',\r\n                                            backgroundColor: 'white',\r\n                                            borderRadius: '5px',\r\n                                            boxShadow: '1px 2px 2px\t#A9A9A9',\r\n                                        }}\r\n                                    >\r\n                                        <div className=\"mb-3\">\r\n                                            <h4 className=\"text-dark pl-3 pt-3 font-weight-bold m-0\">\r\n                                                Manufacturing Services\r\n                                            </h4>\r\n                                        </div>\r\n                                        {hubService && (\r\n                                            <div\r\n                                                className=\"\"\r\n                                                style={{ width: '100%' }}\r\n                                            >\r\n                                                <MfgProcessViewSelected\r\n                                                    viewsData={hubService}\r\n                                                    deleteicon={false}\r\n                                                    profileEdit={true}\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row border mt-3\">\r\n                                    <div\r\n                                        style={{\r\n                                            width: '100%',\r\n                                            height: 'auto',\r\n                                            backgroundColor: 'white',\r\n                                            borderRadius: '5px',\r\n                                            boxShadow: '1px 2px 2px\t#A9A9A9',\r\n                                        }}\r\n                                    >\r\n                                        <div className=\"mb-3\">\r\n                                            <h4 className=\"text-dark pl-3 pt-3 font-weight-bold m-0\">\r\n                                                Rate this Manufacturing Hub\r\n                                            </h4>\r\n                                            <span\r\n                                                className=\"text-secondary pl-3 pt-3\"\r\n                                                style={{ fontSize: '16px' }}\r\n                                            >\r\n                                                Tell others what you think\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"pl-3 pr-3 pb-3 d-flex justify-content-center\">\r\n                                            <StarRating\r\n                                                widgetDimensions=\"35px\"\r\n                                                widgetSpacing=\"25px\"\r\n                                                setAverageRating={\r\n                                                    setAverageRating\r\n                                                }\r\n                                                setTotalRatings={\r\n                                                    setTotalRatings\r\n                                                }\r\n                                                overallRatingArray={\r\n                                                    setOverallRatingArray\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n\r\n                                        {/* <div>\r\n                                            <div>\r\n                                                <h4 className=\"text-dark pl-3 pt-3 font-weight-bold m-0\">\r\n                                                    Ratings\r\n                                                </h4>\r\n                                            </div>\r\n\r\n                                            <div className=\"row m-2 p-3 d-flex align-items-center\">\r\n                                                <div className=\"col-md-3 d-flex flex-column justify-content-center align-items-center\">\r\n                                                    <div\r\n                                                        className=\"row p-0\"\r\n                                                        style={{\r\n                                                            fontSize: '4rem',\r\n                                                        }}\r\n                                                    >\r\n                                                        <AverageRatingNum\r\n                                                            averageRating={\r\n                                                                averageRating\r\n                                                            }\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <StarRatingAverage\r\n                                                            averageRating={\r\n                                                                averageRating\r\n                                                            }\r\n                                                            widgetDimensions=\"15px\"\r\n                                                            widgetSpacing=\"20px\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <TotalRatings\r\n                                                            totalRatings={\r\n                                                                totalRatings\r\n                                                            }\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-md\">\r\n                                                    <OverallRatings\r\n                                                        overallRatingArray={\r\n                                                            overallRatingArray\r\n                                                        }\r\n                                                        totalRatings={\r\n                                                            totalRatings\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ManufacturerViewProfile;\r\n\r\nconst ContactInformationView = ({ icon, label, info }) => {\r\n    return (\r\n        <>\r\n            <div className=\"row m-auto pl-3\">\r\n                <span className=\"col-1\">\r\n                    <FontAwesomeIcon icon={icon} size=\"1x\" />\r\n                </span>\r\n                <span className=\"col font-weight-bold\" style={{ fontSize: 18 }}>\r\n                    {label}\r\n                </span>\r\n            </div>\r\n            <div className=\"row m-auto pl-3 pb-2\">\r\n                <span className=\"ml-5 text-primary\">{info}</span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst StarRatingView = ({ averageRating = 4.2, totalRatings = 123456789 }) => {\r\n    //const averageRating = 2;\r\n    return (\r\n        <>\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        backgroundColor: 'goldenrod',\r\n                        borderRadius: '50%',\r\n                        height: '60px',\r\n                        width: '60px',\r\n                        position: 'absolute',\r\n                        zIndex: 1,\r\n                        fontSize: '26px',\r\n                        fontWeight: 'bold',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        color: 'black',\r\n                    }}\r\n                >\r\n                    <AverageRatingNum averageRating={averageRating} />\r\n                </div>\r\n                <div>\r\n                    <div\r\n                        className=\"ml-3\"\r\n                        style={{\r\n                            backgroundColor: 'white',\r\n                            borderTopRightRadius: '50px',\r\n                            borderBottomRightRadius: '50px',\r\n                            height: '40px',\r\n                            width: '200px',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'flex-end',\r\n                            paddingRight: 15,\r\n                            border: '2px solid goldenrod',\r\n                        }}\r\n                    >\r\n                        <StarRatingAverage\r\n                            averageRating={averageRating}\r\n                            widgetDimensions=\"20px\"\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            position: 'absolute',\r\n                            fontSize: '14px',\r\n                            width: '200px',\r\n                            justifyContent: 'flex-end',\r\n                        }}\r\n                    >\r\n                        <TotalRatings totalRatings={totalRatings} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst OtherService = ({ service, materials }) => {\r\n    const [visibleMaterial, setVisibleMaterial] = useState(false);\r\n\r\n    const onClickChevron = () => {\r\n        setVisibleMaterial(!visibleMaterial);\r\n    };\r\n\r\n    const chaveronToggleOn = {\r\n        marginRight: 5,\r\n        transition: 'all 0.5s ease',\r\n        transform: 'rotate(90deg)',\r\n    };\r\n\r\n    const chaveronToggleOff = {\r\n        marginRight: 5,\r\n        transition: 'all 0.5s ease',\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <span>\r\n                <FontAwesomeIcon\r\n                    style={\r\n                        visibleMaterial ? chaveronToggleOn : chaveronToggleOff\r\n                    }\r\n                    icon={faChevronRight}\r\n                    onClick={() => onClickChevron()}\r\n                    size=\"sm\"\r\n                />\r\n                {service}\r\n            </span>\r\n\r\n            {visibleMaterial && (\r\n                <ul\r\n                    className=\"pl-5\"\r\n                    style={{\r\n                        fontSize: '14px',\r\n                        color: 'black',\r\n                    }}\r\n                >\r\n                    {materials.map((material, index) => {\r\n                        return <li key={index}>{material}</li>;\r\n                    })}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\ChangePass.js",["450","451","452"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\customer\\UserProfile.js",["453","454","455","456","457","458","459"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\vacuum-forming\\MainFeaturedPost.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\vacuum-forming\\FeaturedPost.js",["460"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport './Blog.css';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    display: 'flex',\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n  },\r\n  cardMedia: {\r\n    width: 160,\r\n  },\r\n});\r\n\r\nexport default function FeaturedPost(props) {\r\n  const classes = useStyles();\r\n  const { post } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={12}>\r\n      <CardActionArea component=\"p\">\r\n        <Card className={classes.card}>\r\n          <div className={classes.cardDetails}>\r\n            <CardContent>\r\n              <p>Vacuum forming is a digital manufacturing process which involves heating specific sheets of plastic to required forming temperature and stretching and pulling them onto the surface of the mold placed in the bed using vacuum suction. Forming involves shaping plastic to that of the mold. Vacuum forming is the simple type of plastic thermoforming that uses vacuum pressure to get the required parts mold with desired details and geometry.</p>\r\n              <p>\r\n              It uses a portal in the home vacuum machine for creating suction under the bed. When the plastic sheet is heated the sheet is pulled down stretching over the mold above the bed. The suction starts pulling the sheets and forming the desired shape in the sheet.\r\n              </p>\r\n              <p>\r\n              The templates used for vacuum forming are usually 3D printed parts or real life products. The thing to consider is that the material packing of these templates needs to be tight.\r\n              </p>\r\n              <p>The major applications are the: prototyping industries, product packaging, chocolate dies, Medical packaging: pharmaceutical trays pills are packaged: MRI and CT machine exterior pieces.</p>\r\n              <p>Compatible materials for forming: Thermoplastic Sheets (Clear Sheet, Resin Sheets, Form Sheets and Cast Sheets)</p>\r\n              <p>Materials for Casting in the mount: Plaster of Paris, Resin, Jesmonite, Concrete, Chocolate, Silicone, Wax.</p>\r\n            </CardContent>\r\n          </div>\r\n        </Card>\r\n      </CardActionArea>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nFeaturedPost.propTypes = {\r\n  post: PropTypes.object,\r\n};\r\n",["461","462"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\Dropzone.js",["463","464","465"],"import Axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport Alert from './Alert';\r\nimport './dropZone.css';\r\nimport { GetCookiesInfo } from './GlobalFunction';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst path = require('path');\r\n\r\nconst localIpUrl = require('local-ip-url');\r\nconst ipAddress = localIpUrl('public', 'ipv4');\r\n\r\nconsole.log(ipAddress);\r\n\r\nfunction Dropzone({\r\n    title,\r\n    fileNote,\r\n    requirementNote,\r\n    parentCallback,\r\n    user,\r\n    fileUpload,\r\n}) {\r\n    const [message, setMessage] = useState('');\r\n    const [alertType, setAlertType] = useState();\r\n    //const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [percentage, setUploadPercentage] = useState(0);\r\n    const [uploadComplete, setUploadComplete] = useState(false);\r\n    const [isUpload, setIsUpload] = useState(false);\r\n    const [uploadedFile, setUploadedFile] = useState();\r\n    const accept = '.pdf, .jpeg, .dxf, .stl, .obj, .step, .tif';\r\n\r\n    const onDropAccepted = (acceptedFiles) => {\r\n        const { email } = GetCookiesInfo();\r\n        setUploadComplete(false);\r\n        setIsUpload(true);\r\n        setMessage('');\r\n        //#region for multiple upload\r\n        console.log(email);\r\n        //setUploadedFiles((uploadedFile) => uploadedFile.concat(acceptedFiles));\r\n\r\n        // const formData = new FormData();\r\n        // acceptedFiles.forEach((acceptedFile) => {\r\n        //   formData.append(\"file\", acceptedFile);\r\n        // });\r\n        // Axios.post(`http://${ipAddress}:3001/upload`, formData, {\r\n        //   onUploadProgress: (progressEvent) => {\r\n        //     setUploadPercentage(\r\n        //       parseInt(\r\n        //         Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n        //       )\r\n        //     );\r\n        //   },\r\n        // })\r\n        //   .then((response) => {\r\n        //     setUploadPercentage(0);\r\n        //     setUploadComplete(true);\r\n        //   })\r\n        //   .catch((error) => {\r\n        //     console.error(\"There was an error!\", error);\r\n        //   });\r\n        //#endregion\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', acceptedFiles[0]);\r\n        formData.append('user', email);\r\n        try {\r\n            Axios.post(`http://${ipAddress}:3001/upload`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n                onUploadProgress: (progressEvent) => {\r\n                    setUploadPercentage(\r\n                        parseInt(\r\n                            Math.round(\r\n                                (progressEvent.loaded * 100) /\r\n                                    progressEvent.total\r\n                            )\r\n                        )\r\n                    );\r\n                },\r\n            }).then((response) => {\r\n                setUploadPercentage(0);\r\n\r\n                if (response.data.msg) {\r\n                    const { fileName, filePath, msg } = response.data;\r\n                    setUploadedFile({ fileName, filePath });\r\n                    setMessage(msg);\r\n                    setAlertType('alert-danger');\r\n                } else {\r\n                    setUploadComplete(true);\r\n                    const { fileName, filePath } = response.data;\r\n                    setUploadedFile({ fileName, filePath });\r\n                    parentCallback({ fileName, filePath });\r\n                }\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const onDropRejected = (rejectedFiles) => {\r\n        var errorMsg = rejectedFiles[0].errors[0].code;\r\n        setMessage(errorMsg);\r\n        setAlertType('alert-danger');\r\n        console.log(rejectedFiles);\r\n    };\r\n\r\n    const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n        accept: accept,\r\n        maxFiles: 1,\r\n        maxSize: 15 * 1000 * 1000,\r\n        onDropAccepted,\r\n        onDropRejected,\r\n    });\r\n\r\n    const onBtnRemove = (file) => {\r\n        const { fileName, filePath } = uploadedFile;\r\n        console.log(uploadedFile);\r\n        if (fileName === file.name) {\r\n            Axios.post(`http://${ipAddress}:3001/delete`, {\r\n                filePath: filePath,\r\n            }).then((response) => {\r\n                if (response.data) {\r\n                    const { msg, removed } = response.data;\r\n                    if (removed) {\r\n                        setMessage(msg);\r\n                        setAlertType('alert-success');\r\n                        setIsUpload(false);\r\n                    } else {\r\n                        setMessage(msg);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const files = acceptedFiles.map((file, index) => (\r\n        <div\r\n            className=\"alert alert-success alert-dismissible fade show\"\r\n            style={{ color: 'black' }}\r\n            role=\"alert\"\r\n            key={index}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    <div\r\n                        style={{\r\n                            fontWeight: 'bold',\r\n                            overflow: 'hidden',\r\n                            textOverflow: 'ellipsis',\r\n                        }}\r\n                    >\r\n                        {file.path}\r\n                        <span style={{ color: 'gray' }}>\r\n                            ({parseInt(file.size / 1024)}K)\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4 d-flex align-items-center justify-content-end\">\r\n                    {file == acceptedFiles[0] && !uploadComplete && (\r\n                        <ProgressBar percentage={percentage} />\r\n                    )}\r\n                </div>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => {\r\n                        onBtnRemove(file, index);\r\n                    }}\r\n                >\r\n                    <div area-hidden=\"true\">&times;</div>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"col-lg\">\r\n                <h5>\r\n                    {title}\r\n                    <span style={{ color: 'red' }}>*</span>\r\n                </h5>\r\n            </div>\r\n            {message && (\r\n                <div className=\"row mt-3 ml-auto\">\r\n                    <div className=\"col-sm\">\r\n                        <div className={`alert ${alertType}`} role=\"alert\">\r\n                            {message}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"row ml-auto\">\r\n                <div className=\"col-sm\">\r\n                    <div {...getRootProps({ className: 'uploadParts' })}>\r\n                        <input {...getInputProps()} />\r\n                        <div>\r\n                            <p className=\"mt-3\">\r\n                                {\r\n                                    'Drag & drop a file here, or click to select a file'\r\n                                }\r\n                            </p>\r\n                            <div className=\" d-flex justify-content-center text-center mt-2\">\r\n                                <p>\r\n                                    <span className=\"font-weight-bold text-dark\">\r\n                                        Supported files:\r\n                                    </span>\r\n                                    <br />\r\n                                    {fileNote}\r\n                                    <br />\r\n                                    {requirementNote}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isUpload && (\r\n                <div className=\"row mt-3 ml-auto\">\r\n                    <div className=\"col-sm\">{files}</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dropzone;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\card.js",["466","467","468","469","470","471","472","473"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\orderstatus\\OrderStatusEdit.js",["474"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\StarRating.js",["475"],"import React, { Component, useState } from \"react\";\r\nimport Ratings from \"react-ratings-declarative\";\r\n\r\nvar ratings = [];\r\nfunction Foo() {\r\n  const [rating, setRating] = useState(0);\r\n  const [averageRating, setAverageRating] = useState();\r\n  const [totalFeedback, setTotalFeedback] = useState();\r\n\r\n  const changeRating = (newRating) => {\r\n    ratings.push(newRating);\r\n    var totalRating = ratings.length;\r\n    setAverageRating(ratings.reduce((a, v) => (a = a + v), 0) / totalRating);\r\n    setRating(newRating);\r\n    setTotalFeedback(totalRating);\r\n\r\n    console.log(ratings);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>{averageRating}</div>\r\n      <div>\r\n        <Ratings\r\n          rating={averageRating}\r\n          widgetRatedColors=\"gold\"\r\n          widgetDimensions=\"30px\"\r\n          widgetSpacings=\"0px\"\r\n        >\r\n          <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n          <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n          <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n          <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n          <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n        </Ratings>\r\n      </div>\r\n      <div>{totalFeedback}</div>\r\n      <div>\r\n        <Ratings\r\n          rating={rating}\r\n          widgetRatedColors=\"gold\"\r\n          widgetDimensions=\"30px\"\r\n          widgetSpacings=\"0px\"\r\n          changeRating={changeRating}\r\n        >\r\n          <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n          <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n          <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n          <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n          <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n        </Ratings>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Foo;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\Alert.js",["476","477","478"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\Location.js",["479","480"],"import { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport Search from 'react-leaflet-search';\r\n\r\nexport default function Location(props) {\r\n    const [position, setPosition] = useState();\r\n\r\n    const mapRef = useRef(null);\r\n    const [map, setMap] = useState();\r\n    useEffect(() => {\r\n        const mapInfo = mapRef.current;\r\n        setMap(mapInfo.leafletElement);\r\n    });\r\n\r\n    useEffect(() => {\r\n        props.getLatLng(position);\r\n    }, [position]);\r\n\r\n    const onMapClick = (e) => {\r\n        setPosition(e.latlng);\r\n    };\r\n\r\n    const onMapDblClick = () => {\r\n        map.locate();\r\n        map.on('locationfound', locationFound);\r\n    };\r\n\r\n    const locationFound = (e) => {\r\n        map.flyTo([e.latlng.lat, e.latlng.lng], 17);\r\n        setPosition(e.latlng);\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"mb-2\">\r\n                Click to add marker and drag to adjust to your location.\r\n            </div>\r\n            <div className=\"mb-2\">\r\n                <Map\r\n                    ref={mapRef}\r\n                    style={{ height: '350px', width: '100%' }}\r\n                    center={[27.68, 85.32]}\r\n                    scrollWheelZoom={true}\r\n                    zoom={5}\r\n                    maxZoom={19}\r\n                    onclick={onMapClick}\r\n                    ondblclick={onMapDblClick}\r\n                >\r\n                    <TileLayer\r\n                        noWrap={true}\r\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    <LocationMarker\r\n                        position={position}\r\n                        setPosition={setPosition}\r\n                    />\r\n                    <Search\r\n                        openSearchOnLoad={true}\r\n                        closeResultsOnClick={true}\r\n                        showMarker={false}\r\n                        zoom={15}\r\n                        onChange={(e) => {\r\n                            setPosition(e.latLng);\r\n                        }}\r\n                    />\r\n                </Map>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4 d-flex align-items-center\">\r\n                            <span className=\"font-weight-bold\">Latitude :</span>\r\n                        </div>\r\n                        <div className=\"col-lg\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"latitude\"\r\n                                defaultValue={position ? position.lat : ''}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4 d-flex align-items-center\">\r\n                            <span className=\"font-weight-bold\">\r\n                                Longitude :\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"col-lg\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"longitude\"\r\n                                defaultValue={position ? position.lng : ''}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LocationMarker(props) {\r\n    const onDragEnd = (e) => {\r\n        if (e != null) {\r\n            props.setPosition(e.target._latlng);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.position && (\r\n                <Marker\r\n                    position={[props.position.lat, props.position.lng]}\r\n                    draggable={true}\r\n                    ondragend={onDragEnd}\r\n                >\r\n                    <Popup>\r\n                        You are Here{' '}\r\n                        <div>{`${props.position.lat}, ${props.position.lng}`}</div>\r\n                    </Popup>\r\n                </Marker>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\vacuum-forming\\Blog.js",["481"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport MainFeaturedPost from './MainFeaturedPost';\r\nimport FeaturedPost from './FeaturedPost';\r\nimport VaccumForming from '../assests/vacuum_forming.jpg';\r\nimport './Blog.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainGrid: {\r\n    marginTop: theme.spacing(3),\r\n  }\r\n}));\r\n\r\nconst mainFeaturedPost = {\r\n  image: VaccumForming\r\n};\r\n\r\nexport default function Blog() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <main>\r\n          <MainFeaturedPost post={mainFeaturedPost} />\r\n          <Grid container spacing={4}>\r\n              <FeaturedPost  />\r\n          </Grid>\r\n        </main>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\ManufacturerSignup.js",["482","483","484","485","486","487"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\Homepage.js",["488","489","490","491"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\Routing.js",["492","493","494","495","496"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\navBar.js",["497","498","499","500","501","502","503","504","505","506","507","508","509"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\ProtectedRoute.js",["510"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\validation.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\OTPVerification.js",["511","512"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\OpenStreetMap.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\EditFeatureProject.js",["513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\MakerProfileEdit.js",["531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550"],"import axios from 'axios';\r\nimport { Formik } from 'formik';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { GetCookiesInfo } from '../global/GlobalFunction';\r\nimport FormTextBox, { PasswordField } from '../global/TextBox';\r\nimport './UserProfile.css';\r\nimport { useHistory } from 'react-router';\r\nimport MfgProcessViewSelected from '../manufacturer/MfgProcessViewSelected';\r\nimport ManufacturerServiceSelect from './ManufacturerServiceSelect';\r\nimport {} from '@fortawesome/free-regular-svg-icons';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst localIpUrl = require('local-ip-url');\r\nconst ipAddress = localIpUrl('public');\r\n\r\nfunction EditManufacturerProfile(props) {\r\n    const {\r\n        email,\r\n        userName,\r\n        lastName,\r\n        phoneNumber,\r\n        manufacturerID,\r\n        profileImage,\r\n        contactPerson,\r\n        userStatus,\r\n    } = GetCookiesInfo();\r\n\r\n    const history = useHistory();\r\n    const [error, setError] = useState();\r\n    const [registeredHubs, setRegisteredHubs] = useState();\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [uploadedImage, setUploadedImage] = useState([]);\r\n    const [currentHub, setCurrentHub] = useState();\r\n    var [hubService, setHubService] = useState();\r\n    const [imagePath, setImagePath] = useState();\r\n    const [showAddField, setShowAddField] = useState(false);\r\n    const [saveChangeButton, setSaveChangeButton] = useState(false);\r\n    const [isExist, setIsExist] = useState(false);\r\n    const { id } = props.match.params;\r\n\r\n    //#region get_service_data_from_db\r\n    useEffect(() => {\r\n        axios\r\n            .post(`http://${window.host}/manufacturer/${id}`)\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    const { hub, services } = response.data;\r\n                    setCurrentHub(hub[0]);\r\n                    const hubService = services.map((service) => {\r\n                        console.log(service);\r\n                        const { Name, Material_Name, Service_ID } = service;\r\n                        var data = {\r\n                            fabricationService: {\r\n                                value: Service_ID,\r\n                                label: Name,\r\n                            },\r\n                            materialDetails: JSON.parse(Material_Name),\r\n                        };\r\n                        return data;\r\n                    });\r\n                    setHubService(hubService);\r\n                    setSaveChangeButton(false);\r\n                    const { fileName, filePath } = JSON.parse(hub[0].Logo);\r\n                    setImagePath(filePath);\r\n                }\r\n            });\r\n    }, []);\r\n    //#endregion\r\n\r\n    //#region show savechange button when service updated\r\n    useEffect(() => {\r\n        setSaveChangeButton(true);\r\n    }, [hubService]);\r\n    //#endregion\r\n\r\n    console.log(registeredHubs, 'list', serviceList);\r\n    var list;\r\n\r\n    const handleOnchangeimage = (e) => {\r\n        const formData = new FormData();\r\n        const file = e.target.files;\r\n        var data;\r\n\r\n        formData.append('file', file[0]);\r\n        formData.append('document', 'logo');\r\n        formData.append('id', manufacturerID);\r\n        console.log(file, formData);\r\n        axios\r\n            .post(`http://${window.host}/imageupload`, formData, {\r\n                document: 'documents',\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                // console.log(response.data);\r\n                // document.cookie = `userInfo = ${JSON.stringify(\r\n                //   response.data\r\n                // )}; expires=Thu, 18 Dec 2023 12:00:00 UTC; path=/`;\r\n\r\n                if (response.data.msg) console.log(response.data.msg);\r\n                else {\r\n                    console.log(response.data);\r\n                    data = JSON.stringify(response.data);\r\n                    console.log(data);\r\n\r\n                    axios\r\n                        .post(`http://${window.host}/changeimage`, {\r\n                            id: manufacturerID,\r\n                            image: data,\r\n                            userStatus: userStatus,\r\n                        })\r\n                        .then((response) => {\r\n                            console.log(response.data);\r\n                        });\r\n                    const { fileName, filePath } = JSON.parse(data);\r\n                    console.log(filePath);\r\n                    setImagePath(filePath);\r\n                }\r\n            });\r\n    };\r\n\r\n    //#region show_service_addfield\r\n    const onClickAddmore = () => {\r\n        setShowAddField(!showAddField);\r\n    };\r\n    //#endregion\r\n\r\n    //#region update_added_services_in_hubServices\r\n    if (hubService)\r\n        var services = hubService.filter((hubService) => hubService);\r\n    const AddService = (data) => {\r\n        var mateiralExist = false;\r\n        var serviceExist = false;\r\n\r\n        if (services.length > 0 && data) {\r\n            services.map((service, index) => {\r\n                if (\r\n                    data.fabricationService.label ===\r\n                    service.fabricationService.label\r\n                ) {\r\n                    serviceExist = true;\r\n                    service.materialDetails.map((materialDetail) => {\r\n                        if (\r\n                            data.materialDetails[0].material.label ===\r\n                            materialDetail.material.label\r\n                        ) {\r\n                            window.alert('Material Already Exist');\r\n                            return (mateiralExist = true);\r\n                        }\r\n                    });\r\n                    if (!mateiralExist) {\r\n                        return (service.materialDetails = service.materialDetails.concat(\r\n                            data.materialDetails[0]\r\n                        ));\r\n                    }\r\n                }\r\n            });\r\n            if (!serviceExist) {\r\n                services = services.concat(data);\r\n            }\r\n        } else {\r\n            services = services.concat(data);\r\n        }\r\n\r\n        setIsExist(true);\r\n        console.log(services);\r\n        setHubService(services);\r\n    };\r\n    //#endregion\r\n\r\n    //#region on Save Changes_Manufacturer_Services\r\n    const OnSaveChange = () => {\r\n        axios\r\n            .post(`http://${window.host}/update-services/${id}`, {\r\n                hubService: hubService,\r\n            })\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    setSaveChangeButton(false);\r\n                    console.log(response.data);\r\n                    const { message } = response.data;\r\n                    window.alert(message);\r\n                }\r\n            });\r\n    };\r\n    //#endregion\r\n\r\n    return (\r\n        <div className=\"container-fluid mb-5 p-5 border\">\r\n            <div className=\"row gutters container-border mx-5 p-4\">\r\n                <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                    {currentHub && (\r\n                        <div className=\"card h-100 border-0\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"account-settings\">\r\n                                    <div className=\"user-profile\" id=\"image\">\r\n                                        <div className=\"user-avatar\">\r\n                                            <a\r\n                                                aria-label=\"Change Profile Picture\"\r\n                                                className=\"change-pic\"\r\n                                            >\r\n                                                <div\r\n                                                    className=\"profile-pic\"\r\n                                                    style={{\r\n                                                        backgroundImage: `url(${imagePath})`,\r\n                                                        border:\r\n                                                            '1px solid lightgray',\r\n                                                    }}\r\n                                                ></div>\r\n                                                <div className=\"overlay\">\r\n                                                    <span\r\n                                                        //href=\"#\"\r\n                                                        className=\"icon\"\r\n                                                        //title=\"User Profile\"\r\n                                                    >\r\n                                                        <FontAwesomeIcon\r\n                                                            //style={{ marginRight: 2 }}\r\n                                                            icon={faCamera}\r\n                                                            size=\"sm\"\r\n                                                        />\r\n                                                        <input\r\n                                                            className=\"avatar-file h-100 w-100\"\r\n                                                            type=\"file\"\r\n                                                            name=\"file\"\r\n                                                            onChange={\r\n                                                                handleOnchangeimage\r\n                                                            }\r\n                                                        />\r\n                                                    </span>\r\n                                                </div>\r\n                                            </a>\r\n                                        </div>\r\n                                        <h5 className=\"user-name\">\r\n                                            {currentHub.Company_Name}\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            {currentHub && (\r\n                                <Formik\r\n                                    initialValues={{\r\n                                        email: currentHub.Email,\r\n                                        firstName: currentHub.Company_Name,\r\n                                        contactPerson:\r\n                                            currentHub.Contact_Person,\r\n                                        phoneNumber: currentHub.Phone_Number,\r\n                                        address: currentHub.Address,\r\n                                    }}\r\n                                    validate={(values) => {\r\n                                        const errors = {};\r\n                                        if (!values.email) {\r\n                                            errors.email = 'Required';\r\n                                        } else if (\r\n                                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\r\n                                                values.email\r\n                                            )\r\n                                        ) {\r\n                                            errors.email =\r\n                                                'Invalid email address';\r\n                                        }\r\n                                        if (!values.contactPerson) {\r\n                                            errors.contactPerson = 'Required';\r\n                                        }\r\n                                        if (!values.phoneNumber) {\r\n                                            errors.phoneNumber = 'Required';\r\n                                        }\r\n\r\n                                        console.log(errors.firstName);\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={(values, { setSubmitting }) => {\r\n                                        setTimeout(() => {\r\n                                            console.log('submit');\r\n                                            axios\r\n                                                .post(\r\n                                                    `http://${window.host}/editManufacturerProfile`,\r\n                                                    {\r\n                                                        id: manufacturerID,\r\n                                                        contactPerson:\r\n                                                            values.contactPerson,\r\n                                                        email: values.email,\r\n                                                        phonenumber:\r\n                                                            values.phoneNumber,\r\n                                                    }\r\n                                                )\r\n                                                .then((response) => {\r\n                                                    console.log(response.data);\r\n                                                    history.push({\r\n                                                        pathname:\r\n                                                            '/manufacturer-profile',\r\n                                                    });\r\n\r\n                                                    window.location.reload();\r\n                                                });\r\n                                            setSubmitting(false);\r\n                                        }, 100);\r\n                                    }}\r\n                                >\r\n                                    {({\r\n                                        values,\r\n                                        errors,\r\n                                        touched,\r\n                                        handleChange,\r\n                                        handleBlur,\r\n                                        handleSubmit,\r\n                                        isSubmitting,\r\n                                        /* and other goodies */\r\n                                    }) => (\r\n                                        <form onSubmit={handleSubmit}>\r\n                                            <h3 className=\"mb-2 text-primary\">\r\n                                                Basic Details\r\n                                            </h3>\r\n                                            <div className=\"row gutters\">\r\n                                                <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                                    <div className=\"form-group no-bottom-border\">\r\n                                                        <label htmlFor=\"contactPerson\">\r\n                                                            Contact Person\r\n                                                        </label>\r\n                                                        <FormTextBox\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            name=\"contactPerson\"\r\n                                                            placeholder=\"Contact Person Name\"\r\n                                                            value={\r\n                                                                values.contactPerson\r\n                                                            }\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                                    <div className=\"form-group no-bottom-border\">\r\n                                                        <label htmlFor=\"address\">\r\n                                                            Address\r\n                                                        </label>\r\n                                                        <FormTextBox\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            name=\"address\"\r\n                                                            placeholder=\"Enter Address\"\r\n                                                            value={\r\n                                                                values.address\r\n                                                            }\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                                    <div className=\"form-group no-bottom-border\">\r\n                                                        <label htmlFor=\"PhoneNumber\">\r\n                                                            Phone Number\r\n                                                        </label>\r\n                                                        <FormTextBox\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            name=\"phoneNumber\"\r\n                                                            placeholder=\"Phone Number\"\r\n                                                            value={\r\n                                                                values.phoneNumber\r\n                                                            }\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                                                    <div className=\"form-group no-bottom-border\">\r\n                                                        <label htmlFor=\"email\">\r\n                                                            Email\r\n                                                        </label>\r\n                                                        <FormTextBox\r\n                                                            type=\"email\"\r\n                                                            className=\"form-control\"\r\n                                                            name=\"email\"\r\n                                                            placeholder=\"Email\"\r\n                                                            value={values.email}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row gutters\">\r\n                                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-right\">\r\n                                                    <div>\r\n                                                        <button\r\n                                                            // type=\"button\"\r\n                                                            type=\"submit\"\r\n                                                            name=\"submit\"\r\n                                                            disabled={\r\n                                                                isSubmitting\r\n                                                            }\r\n                                                            className=\"btn btn-primary mr-2\"\r\n                                                        >\r\n                                                            Update\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    )}\r\n                                </Formik>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 mt-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                        <h3 className=\"mb-2 text-primary\">\r\n                                            Manufacturing Service\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n                                {hubService && (\r\n                                    <div className=\"\">\r\n                                        <MfgProcessViewSelected\r\n                                            viewsData={hubService}\r\n                                            updateviewsData={(updatedData) =>\r\n                                                setHubService(updatedData)\r\n                                            }\r\n                                            profileEdit={true}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div className=\"row m-2 d-flex justify-content-end align-items-center\">\r\n                                    <span\r\n                                        className=\"addmore-btn\"\r\n                                        onClick={onClickAddmore}\r\n                                    >\r\n                                        <FontAwesomeIcon\r\n                                            className=\"mr-1\"\r\n                                            icon={faPlus}\r\n                                        />\r\n                                        Add more...\r\n                                    </span>\r\n                                </div>\r\n                                <div\r\n                                    className={\r\n                                        showAddField\r\n                                            ? 'addfield active'\r\n                                            : 'addfield'\r\n                                    }\r\n                                >\r\n                                    {hubService && (\r\n                                        <ManufacturerServiceSelect\r\n                                            getAddedService={AddService}\r\n                                            profileEdit={true}\r\n                                        />\r\n                                    )}\r\n                                    {hubService &&\r\n                                        console.log('services', hubService)}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {saveChangeButton && (\r\n                                <div className=\"row gutters\">\r\n                                    <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-right\">\r\n                                        <div>\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                id=\"submit\"\r\n                                                name=\"submit\"\r\n                                                className=\"btn btn-primary mr-2\"\r\n                                                onClick={OnSaveChange}\r\n                                            >\r\n                                                Save Changes\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-9 col-sm-9 col-9 mt-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            {error && (\r\n                                <div\r\n                                    className=\"alert alert-warning\"\r\n                                    role=\"alert\"\r\n                                >\r\n                                    {error}\r\n                                </div>\r\n                            )}\r\n                            <Formik\r\n                                initialValues={{\r\n                                    old_password: '',\r\n                                    new_password: '',\r\n                                    confirm_password: '',\r\n                                }}\r\n                                validate={(values) => {\r\n                                    const errors = {};\r\n                                    if (!values.old_password) {\r\n                                        errors.old_password = 'Required';\r\n                                    }\r\n                                    if (!values.new_password) {\r\n                                        errors.new_password = 'Required';\r\n                                    } else if (values.new_password.length < 6) {\r\n                                        errors.new_password =\r\n                                            'Password needs to be 6 characters or more';\r\n                                    }\r\n                                    if (!values.confirm_password) {\r\n                                        errors.confirm_password = 'Required';\r\n                                    } else if (\r\n                                        values.confirm_password !==\r\n                                        values.new_password\r\n                                    ) {\r\n                                        errors.confirm_password =\r\n                                            'Password do not match';\r\n                                    }\r\n\r\n                                    return errors;\r\n                                }}\r\n                                onSubmit={(values, { setSubmitting }) => {\r\n                                    setTimeout(() => {\r\n                                        console.log(values.email);\r\n                                        axios\r\n                                            .post(\r\n                                                `http://${window.host}/change-password`,\r\n                                                {\r\n                                                    new_password:\r\n                                                        values.new_password,\r\n                                                    old_password:\r\n                                                        values.old_password,\r\n                                                    confirm_password:\r\n                                                        values.confirm_password,\r\n                                                    id: manufacturerID,\r\n                                                    userStatus: userStatus,\r\n                                                }\r\n                                            )\r\n                                            .then((response) => {\r\n                                                if (response.data.message) {\r\n                                                    setError(\r\n                                                        response.data.message\r\n                                                    );\r\n                                                } else {\r\n                                                    history.push({\r\n                                                        pathname: '/',\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        setSubmitting(false);\r\n                                    }, 100);\r\n                                }}\r\n                            >\r\n                                {({\r\n                                    values,\r\n                                    errors,\r\n                                    touched,\r\n                                    handleChange,\r\n                                    handleBlur,\r\n                                    handleSubmit,\r\n                                    isSubmitting,\r\n                                    /* and other goodies */\r\n                                }) => (\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <h3 className=\"mb-3 text-primary\">\r\n                                            Change Password\r\n                                        </h3>\r\n                                        <div className=\"row gutters\">\r\n                                            <div className=\" col-6\">\r\n                                                <div className=\"form-group no-bottom-border\">\r\n                                                    <label htmlFor=\"currentPassword\">\r\n                                                        Current Password\r\n                                                    </label>\r\n                                                    <PasswordField\r\n                                                        type=\"password\"\r\n                                                        placeholder=\"Current password\"\r\n                                                        name=\"old_password\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\" col-6\"></div>\r\n                                            <div className=\" col-6\">\r\n                                                <div className=\"form-group no-bottom-border\">\r\n                                                    <label htmlFor=\"newPassword\">\r\n                                                        New Password\r\n                                                    </label>\r\n                                                    <PasswordField\r\n                                                        type=\"password\"\r\n                                                        placeholder=\"New password\"\r\n                                                        name=\"new_password\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>{' '}\r\n                                            <div className=\" col-6\">\r\n                                                <div className=\"form-group no-bottom-border\">\r\n                                                    <label htmlFor=\"newPassword\">\r\n                                                        Confirm Password\r\n                                                    </label>\r\n                                                    <PasswordField\r\n                                                        type=\"password\"\r\n                                                        placeholder=\"Confirm Password\"\r\n                                                        name=\"confirm_password\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row gutters\">\r\n                                            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n                                                <div>\r\n                                                    <button\r\n                                                        type=\"submit\"\r\n                                                        disabled={isSubmitting}\r\n                                                        className=\"btn btn-primary mr-2 float-right\"\r\n                                                    >\r\n                                                        Update\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                )}\r\n                            </Formik>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-12 col-sm-12 col-12 mt-4\">\r\n                    <div className=\"card\">\r\n                        {currentHub && (\r\n                            <Formik\r\n                                enableReinitialize={true}\r\n                                initialValues={{\r\n                                    briefDescriptiom:\r\n                                        currentHub.Brief_Description,\r\n                                    additionalDetails:\r\n                                        currentHub.Additional_Details,\r\n                                }}\r\n                                validate={(values) => {\r\n                                    const errors = {};\r\n                                    if (!values.briefDescriptiom) {\r\n                                        errors.briefDescriptiom = 'Required';\r\n                                    }\r\n                                    if (!values.additionalDetails) {\r\n                                        errors.additionalDetails = 'Required';\r\n                                    }\r\n                                    console.log(errors);\r\n                                    return errors;\r\n                                }}\r\n                                onSubmit={(values, { setSubmitting }) => {\r\n                                    setTimeout(() => {\r\n                                        axios\r\n                                            .post(\r\n                                                `http://${window.host}/update-details`,\r\n                                                {\r\n                                                    briefDescriptiom:\r\n                                                        values.briefDescriptiom,\r\n                                                    additionalDetails:\r\n                                                        values.additionalDetails,\r\n\r\n                                                    id: manufacturerID,\r\n                                                }\r\n                                            )\r\n                                            .then((response) => {\r\n                                                {\r\n                                                    history.push({\r\n                                                        pathname:\r\n                                                            '/manufacturer-profile',\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        setSubmitting(false);\r\n                                    }, 100);\r\n                                }}\r\n                            >\r\n                                {({\r\n                                    values,\r\n                                    errors,\r\n                                    touched,\r\n                                    handleChange,\r\n                                    handleBlur,\r\n                                    handleSubmit,\r\n                                    isSubmitting,\r\n                                    /* and other goodies */\r\n                                }) => (\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <div className=\"card-body\">\r\n                                            <h3 className=\"mb-3 text-primary\">\r\n                                                Brief Description\r\n                                            </h3>\r\n                                            <div className=\"row gutters\">\r\n                                                <div className=\"col-12\">\r\n                                                    <div className=\"form-group no-bottom-border\">\r\n                                                        <textarea\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            rows=\"4\"\r\n                                                            placeholder=\"Brief Description\"\r\n                                                            name=\"briefDescriptiom\"\r\n                                                            onChange={\r\n                                                                handleChange\r\n                                                            }\r\n                                                            value={\r\n                                                                values.briefDescriptiom\r\n                                                            }\r\n                                                        ></textarea>\r\n                                                    </div>\r\n                                                    <div\r\n                                                        className=\"text-danger\"\r\n                                                        style={{\r\n                                                            fontSize: '10pt',\r\n                                                        }}\r\n                                                    >\r\n                                                        {errors.briefDescriptiom &&\r\n                                                            touched.briefDescriptiom &&\r\n                                                            errors.briefDescriptiom}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <h3 className=\"mb-3 text-primary\">\r\n                                                Additional Details\r\n                                            </h3>\r\n                                            <div className=\"row gutters\">\r\n                                                <div className=\"col-12\">\r\n                                                    <div className=\"form-group no-bottom-border\">\r\n                                                        <textarea\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            rows=\"4\"\r\n                                                            placeholder=\"Additional Details\"\r\n                                                            name=\"additionalDetails\"\r\n                                                            onChange={\r\n                                                                handleChange\r\n                                                            }\r\n                                                            value={\r\n                                                                values.additionalDetails\r\n                                                            }\r\n                                                        ></textarea>\r\n                                                    </div>\r\n                                                    <div\r\n                                                        className=\"text-danger\"\r\n                                                        style={{\r\n                                                            fontSize: '10pt',\r\n                                                        }}\r\n                                                    >\r\n                                                        {errors.additionalDetails &&\r\n                                                            touched.additionalDetails &&\r\n                                                            errors.additionalDetails}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row gutters\">\r\n                                                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-right\">\r\n                                                    <button\r\n                                                        type=\"submit\"\r\n                                                        className=\"btn btn-primary mr-2\"\r\n                                                        disabled={isSubmitting}\r\n                                                    >\r\n                                                        Update\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                )}\r\n                            </Formik>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center mt-4\">\r\n                    <button\r\n                        type=\"button\"\r\n                        id=\"submit\"\r\n                        name=\"submit\"\r\n                        className=\"btn cancel-btn btn-primary\"\r\n                        onClick={() => {\r\n                            window.location.href = '/manufacturer-profile';\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditManufacturerProfile;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\orderstatus\\CustomerOrderStatus.js",["551","552","553","554","555","556","557","558","559"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\3d-printing\\FeaturedPost.js",["560"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport './Blog.css';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    display: 'flex',\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n  },\r\n  cardMedia: {\r\n    width: 160,\r\n  },\r\n});\r\n\r\nexport default function FeaturedPost(props) {\r\n  const classes = useStyles();\r\n  const { post } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={12}>\r\n      <CardActionArea component=\"p\">\r\n        <Card className={classes.card}>\r\n          <div className={classes.cardDetails}>\r\n            <CardContent>\r\n              <p>3D Printing, also termed as an additive manufacturing is the process of making physical objects/products through layer wise addition of melted material directly from the computer aided 3D designs.</p>\r\n              <p>\r\n              There is no necessity of investing in additional tools or die/mold in the 3D printing manufacturing process. A desired product is first modelled in a 3D CAD software, exported in acceptable file formats (usually .obj, .stl) and sent to a 3D printing slicer software which converts design into machine supported codes and a 3D printer makes the product in real physical form.\r\n              </p>\r\n              <p>\r\n              Most popular 3D printing technologies are the FDM 3D printers (Plastic/rubber filament as raw material), SLA/DLP 3D printers (liquid resins as raw material and laser/light source for binding layers) and SLS 3D Printer technologies (polymer or metal power as raw material and laser source).\r\n              </p>\r\n            </CardContent>\r\n          </div>\r\n          {/* <Hidden xsDown>\r\n            <CardMedia className={classes.cardMedia} image={post.image} title={post.imageTitle} />\r\n          </Hidden> */}\r\n        </Card>\r\n      </CardActionArea>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nFeaturedPost.propTypes = {\r\n  post: PropTypes.object,\r\n};\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\Button.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\MfgProcessViewSelected.js",["561","562","563","564","565"],"import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport {\r\n    faChevronCircleUp,\r\n    faChevronCircleDown,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport '../orderstatus/Table.css';\r\n\r\nvar list = null;\r\nexport default function MfgProcessViewSelected({\r\n    viewsData,\r\n    updateviewsData,\r\n    deleteicon = true,\r\n    profileEdit,\r\n}) {\r\n    const col = 'col-lg d-flex justify-content-center p-2 truncate';\r\n\r\n    if (viewsData !== null) {\r\n        list = viewsData.map((item, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <ServiceList\r\n                        item={item}\r\n                        updateviewsData={updateviewsData}\r\n                        viewsData={viewsData}\r\n                        deleteicon={deleteicon}\r\n                        profileEdit={profileEdit}\r\n                    />\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    return <div>{list}</div>;\r\n}\r\n\r\n// const expandTable = {\r\n//   position: \"realative\",\r\n//   width: \"100%\",\r\n//   height: \"auto\",\r\n//   transition: \"all 0.5s ease\",\r\n//   overflow: \"hidden\",\r\n//   borderRadius: \"3px\",\r\n// };\r\n\r\n// const collapseTable = {\r\n//   position: \"realative\",\r\n//   display: \"flex\",\r\n\r\n//   height: \"30px\",\r\n//   transition: \"all 0.5s ease\",\r\n//   overflow: \"hidden\",\r\n//   borderRadius: \"3px\",\r\n// };\r\n\r\nconst ServiceList = ({\r\n    item,\r\n    updateviewsData,\r\n    viewsData,\r\n    deleteicon,\r\n    profileEdit,\r\n}) => {\r\n    const [expandToggle, setExpandToggle] = useState(false);\r\n    const onExpandToggleClick = () => {\r\n        setExpandToggle(!expandToggle);\r\n    };\r\n    console.log(viewsData);\r\n    return (\r\n        <div className=\"m-1\">\r\n            <div\r\n                className=\"d-flex justify-content-between align-items-center pl-3 pr-3 \"\r\n                style={{\r\n                    backgroundColor: 'lightgray',\r\n                    height: '30px',\r\n                    borderRadius: '3px',\r\n                    position: 'relative',\r\n                }}\r\n            >\r\n                {profileEdit ? (\r\n                    <div style={{ marginLeft: 2, fontWeight: 'bold' }}>\r\n                        {`${item.fabricationService.label}`}\r\n                    </div>\r\n                ) : (\r\n                    <div style={{ marginLeft: 2, fontWeight: 'bold' }}>\r\n                        {`${item.selectedFabrication.Name}`}\r\n                    </div>\r\n                )}\r\n                {deleteicon && (\r\n                    <div style={{ marginRight: 3 }}>\r\n                        <FontAwesomeIcon\r\n                            style={{ transition: 'all 0.5s ease' }}\r\n                            icon={\r\n                                expandToggle\r\n                                    ? faChevronCircleUp\r\n                                    : faChevronCircleDown\r\n                            }\r\n                            onClick={() => onExpandToggleClick()}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {expandToggle && (\r\n                <div>\r\n                    <MaterialDetailView\r\n                        materialDetails={item.materialDetails}\r\n                        updateviewsData={updateviewsData}\r\n                        viewsData={viewsData}\r\n                        deleteicon={deleteicon}\r\n                        profileEdit={profileEdit}\r\n                    />\r\n                </div>\r\n            )}\r\n            {!deleteicon && (\r\n                <div>\r\n                    <MaterialDetailView\r\n                        materialDetails={item.materialDetails}\r\n                        updateviewsData={updateviewsData}\r\n                        viewsData={viewsData}\r\n                        deleteicon={deleteicon}\r\n                        profileEdit={profileEdit}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MaterialDetailView = ({\r\n    materialDetails,\r\n    updateviewsData,\r\n    viewsData,\r\n    deleteicon,\r\n    profileEdit,\r\n}) => {\r\n    const onDeleteClick = (materialDetail) => {\r\n        const tempData = viewsData.map((data) => {\r\n            const filteredData = data.materialDetails.filter((mdata) => {\r\n                if (mdata !== materialDetail) {\r\n                    console.log('filtered');\r\n                    return mdata;\r\n                }\r\n            });\r\n            data.materialDetails = filteredData;\r\n            return data;\r\n        });\r\n        const newTempData = tempData.filter((data) => {\r\n            if (data.materialDetails.length > 0) {\r\n                console.log('data');\r\n                return data;\r\n            }\r\n        });\r\n        updateviewsData(newTempData);\r\n    };\r\n    const materialDetailList = materialDetails.map((materialDetail, index) => {\r\n        return (\r\n            <tr key={index} style={{ fontSize: '14px' }}>\r\n                {profileEdit ? (\r\n                    <td className=\"align-middle\">\r\n                        {materialDetail.selectedMaterial.Material_Name}\r\n                    </td>\r\n                ) : (\r\n                    <td className=\"align-middle\">\r\n                        {materialDetail.selectedMaterial.Material_Name}\r\n                    </td>\r\n                )}\r\n                <td className=\"align-middle\">\r\n                    {materialDetail.thickness.label}\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                    {materialDetail.costUnit.label}\r\n                </td>\r\n                <td className=\"align-middle\">{materialDetail.unitRate}</td>\r\n                {deleteicon && (\r\n                    <td className=\"align-middle\">\r\n                        <span\r\n                            className=\"text-danger\"\r\n                            style={{ cursor: 'pointer' }}\r\n                            onClick={() => onDeleteClick(materialDetail)}\r\n                        >\r\n                            <FontAwesomeIcon\r\n                                style={{ marginRight: 2 }}\r\n                                icon={faTrashAlt}\r\n                                size=\"sm\"\r\n                            />\r\n                            Delete\r\n                        </span>\r\n                    </td>\r\n                )}\r\n            </tr>\r\n        );\r\n    });\r\n    return (\r\n        <table className=\"table table-sm table-striped\">\r\n            <thead className=\"thead-light\">\r\n                <tr>\r\n                    <th scope=\"col\">Materials</th>\r\n                    <th scope=\"col\">Thickness</th>\r\n                    <th scope=\"col\">Cost Unit</th>\r\n                    <th scope=\"col\">Unit Rate</th>\r\n                    {deleteicon && <th scope=\"col\">Action</th>}\r\n                </tr>\r\n            </thead>\r\n            <tbody>{materialDetailList}</tbody>\r\n        </table>\r\n    );\r\n};\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\knowledgebank\\data.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\starrating\\StarRating.js",["566","567"],"import React, { Component, useState } from 'react';\r\nimport Ratings from 'react-ratings-declarative';\r\nimport './StarRating.css';\r\nimport RatingProgressView from './RatingProgressView';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDivide, faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nvar ratings = [];\r\nexport default function StarRating({\r\n    widgetDimensions,\r\n    widgetSpacing,\r\n    setAverageRating,\r\n    setTotalRatings,\r\n    overallRatingArray,\r\n}) {\r\n    const [rating, setRating] = useState(0);\r\n    // const [averageRating, setAverageRating] = useState();\r\n    // const [totalFeedback, setTotalFeedback] = useState();\r\n    // var [arr, setArr] = useState([0, 0, 0, 0, 0]);\r\n\r\n    const ChangeRating = (newRating) => {\r\n        ratings.push(newRating);\r\n        var totalRating = ratings.length;\r\n        setAverageRating(\r\n            ratings.reduce((a, v) => (a = a + v), 0) / totalRating\r\n        ); // a is new value, v is the value of array\r\n        setRating(newRating);\r\n        setTotalRatings(totalRating);\r\n        overallRatingArray(ratings);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Ratings\r\n                    rating={rating}\r\n                    widgetRatedColors=\"#0062cc\"\r\n                    widgetDimensions={widgetDimensions}\r\n                    widgetSpacings={widgetSpacing}\r\n                    changeRating={ChangeRating}\r\n                >\r\n                    <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n                    <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n                    <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n                    <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n                    <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n                </Ratings>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function StarRatingAverage({ averageRating, widgetDimensions }) {\r\n    return (\r\n        <div>\r\n            <Ratings\r\n                rating={averageRating}\r\n                widgetRatedColors=\"goldenrod\"\r\n                widgetDimensions={widgetDimensions}\r\n                widgetSpacings=\"4px\"\r\n            >\r\n                <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n                <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n                <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n                <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n                <Ratings.Widget widgetHoverColor=\"goldenrod\" />\r\n            </Ratings>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function AverageRatingNum({ averageRating }) {\r\n    const averageRatingRoundOff = (\r\n        Math.round(averageRating * 100) / 100\r\n    ).toFixed(1);\r\n    return <div>{averageRatingRoundOff}</div>;\r\n}\r\n\r\nexport function TotalRatings({ totalRatings }) {\r\n    const CommaSeperate = (x) => {\r\n        if (x) return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    };\r\n    return (\r\n        <div>\r\n            <FontAwesomeIcon className=\"mr-1\" icon={faUser} size=\"sm\" />\r\n            {CommaSeperate(totalRatings)} total\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function OverallRatings({ overallRatingArray, totalRatings }) {\r\n    var arr = [0, 0, 0, 0, 0];\r\n\r\n    if (overallRatingArray) {\r\n        for (let i = 0; i < overallRatingArray.length; i++) {\r\n            arr[overallRatingArray[i] - 1] += 1;\r\n        }\r\n    }\r\n    arr = arr.reverse();\r\n    return (\r\n        <div>\r\n            {arr.map((item, index) => (\r\n                <div\r\n                    className=\"row m-1 d-flex align-items-center justify-content-end\"\r\n                    key={index}\r\n                >\r\n                    <div\r\n                        className=\"col-1 mr-1 p-0\"\r\n                        style={{\r\n                            textAlign: 'end',\r\n                            fontWeight: 'bold',\r\n                        }}\r\n                    >\r\n                        {arr.length - index}\r\n                    </div>\r\n                    <div className=\"col p-0\">\r\n                        <RatingProgressView\r\n                            completed={(item / totalRatings) * 100}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n",["568","569"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\ProgressBar.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\DropDown.js",["570"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\n\r\nconst DropDown = ({\r\n    placeholder,\r\n    ID,\r\n    options,\r\n    onChange,\r\n    selectedValue,\r\n    getOptionLabel,\r\n    getOptionValue,\r\n    multipleSelect,\r\n}) => {\r\n    const style = { borderRadius: '3px' };\r\n    return (\r\n        <Select\r\n            placeholder={placeholder}\r\n            styles={style}\r\n            value={selectedValue}\r\n            isClearable=\"true\"\r\n            id={ID}\r\n            options={options}\r\n            onChange={onChange}\r\n            getOptionLabel={getOptionLabel}\r\n            getOptionValue={getOptionValue}\r\n            isMulti={multipleSelect}\r\n        />\r\n    );\r\n};\r\n\r\nDropDown.prototype = {};\r\n\r\nDropDown.defaultProps = {\r\n    className: 'text-dark',\r\n    isClearable: 'true',\r\n};\r\n\r\nexport default DropDown;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\newquote\\HubListArea.js",["571","572","573","574"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport CardView from '../global/card';\r\n\r\nvar list = null;\r\nfunction HubListArea({ title, HubList }) {\r\n    const [selectedCardIndex, setSelectedCardIndex] = useState('');\r\n    const [search, setsearch] = useState();\r\n    var companyList = [];\r\n\r\n    // console.log(Hublist.hublist);\r\n    if (HubList) {\r\n        companyList = HubList.hublist;\r\n        console.log(companyList);\r\n    }\r\n\r\n    const onClickVisitProfile = (currentHub, services) => {\r\n        const manufacturerInfo = { currentHub, services };\r\n        const name = currentHub.Company_Name;\r\n        const id = currentHub.Manufacturer_ID;\r\n\r\n        window.location.href = `/manufacturer-list/${id}/${name}`;\r\n    };\r\n\r\n    const searchSpace = (event) => {\r\n        let keyword = event.target.value;\r\n        setsearch(keyword);\r\n    };\r\n\r\n    if (companyList && companyList.length > 0) {\r\n        let serviceData = '';\r\n        // console.log(companyList.Logo);\r\n        //var filesData = JSON.parse(companyList.Logo);\r\n\r\n        list = companyList\r\n            .filter((data) => {\r\n                if (search == null) return data;\r\n                else if (\r\n                    data.Company_Name.toLowerCase().includes(\r\n                        search.toLowerCase()\r\n                    ) ||\r\n                    data.Address.toLowerCase().includes(search.toLowerCase())\r\n                ) {\r\n                    console.log(data);\r\n                    return data;\r\n                }\r\n            })\r\n            .map((company, index) => {\r\n                if (company.Material_Name) {\r\n                    var services = JSON.parse(company.Material_Name);\r\n                    serviceData = services.map((service) => {\r\n                        return (\r\n                            <span className=\"text-wrap\" key={service.value}>\r\n                                {service.label},{' '}\r\n                            </span>\r\n                        );\r\n                    });\r\n                }\r\n\r\n                if (selectedCardIndex === index) {\r\n                    var selected = true;\r\n                } else {\r\n                    selected = false;\r\n                }\r\n\r\n                return (\r\n                    <div key={index}>\r\n                        <CardView\r\n                            // files={filesData}\r\n                            services={serviceData}\r\n                            currentHub={company}\r\n                            currentIndex={index}\r\n                            companyList={companyList}\r\n                            visitProfile={onClickVisitProfile}\r\n                            selected={selected}\r\n                            setSelected={setSelectedCardIndex}\r\n                        />\r\n                    </div>\r\n                );\r\n            });\r\n    } else {\r\n        list = (\r\n            <div className=\"container\">\r\n                <h4 className=\"text-secondary d-flex justify-content-center align-items-center\">\r\n                    NO HUB FOUND\r\n                </h4>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"col-sm\">\r\n                <h5>{title}</h5>\r\n            </div>\r\n            {companyList && companyList.length > 0 && (\r\n                <div\r\n                    style={{ flex: 1, marginBottom: '20px', marginTop: '20px' }}\r\n                >\r\n                    <div id=\"searchbar\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            title=\"Search\"\r\n                            placeholder=\"Search by location, Name\"\r\n                            style={{\r\n                                paddingRight:\"40px\"\r\n                            }}\r\n                            onChange={(e) => searchSpace(e)}\r\n                        />{' '}\r\n                        <i id=\"search\" className=\"fa fa-search\"></i>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div className=\"container\">\r\n                <Scrollbars\r\n                    className=\"text-dark\"\r\n                    style={{\r\n                        width: '100%',\r\n                        height: 350,\r\n                        borderStyle: 'solid',\r\n                        borderRadius: '5px',\r\n                        borderColor: 'darkgrey',\r\n                        borderWidth: '1px',\r\n                    }}\r\n                    autoHide\r\n                >\r\n                    {list != null && (\r\n                        <div className=\"row mt-3 ml-auto\">{list}</div>\r\n                    )}\r\n                </Scrollbars>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HubListArea;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\FeatureProjectViewPage.js",["575","576","577","578","579","580","581","582"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\FeatureProjectList.js",["583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\reportWebVitals.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\ForgotPassword.js",["601","602","603"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\MakerProfile.js",["604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\knowledgebank\\KnowledgeBank1.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\3d-printing\\MainFeaturedPost.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\ProductionCapabilities.js",["627"],"import React, { Component } from 'react';\r\nimport logo from '../assests/3dprinting.jpg';\r\nimport logo1 from '../assests/lasercutting.jpg';\r\nimport logo2 from '../assests/CNC.png';\r\nimport logo3 from '../assests/vacuum_forming.jpg';\r\nimport './technology.css';\r\n\r\nfunction KnowledgeBankViewLeft({ title, info, image }) {\r\n    return (\r\n        <div\r\n            className=\"col-sm-3 ml-5 mb-3 mt-4 pt-2 pb-2 border border-white\"\r\n            style={{ borderRadius: '5px' }}\r\n        >\r\n            <h4 className=\"text-primary\">{title}</h4>\r\n            <p\r\n                className=\"lead\"\r\n                style={{\r\n                    fontSize: '15px',\r\n                    color: 'rgba(255, 255, 255, 0.699)',\r\n                }}\r\n            >\r\n                {info}\r\n            </p>\r\n\r\n            <img\r\n                src={image}\r\n                alt=\"\"\r\n                style={{\r\n                    height: '40%',\r\n                    width: '100%',\r\n                    objectFit: 'cover',\r\n                    marginBottom: '10px',\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ViewDown({ title, info, image }) {\r\n    return (\r\n        <div\r\n            className=\"col-lg-3 ml-5 mb-3 mt-4 pt-2 pb-2 border border-white\"\r\n            style={{ borderRadius: '5px' }}\r\n        >\r\n            <h4 className=\"text-primary\">{title}</h4>\r\n            <p\r\n                className=\"lead\"\r\n                style={{\r\n                    fontSize: '15px',\r\n                    color: 'rgba(255, 255, 255, 0.699)',\r\n                }}\r\n            >\r\n                {info}\r\n            </p>\r\n\r\n            <img\r\n                src={image}\r\n                alt=\"\"\r\n                style={{\r\n                    height: '40%',\r\n                    width: '100%',\r\n                    objectFit: 'cover',\r\n                    marginBottom: '10px',\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nclass ProductionCapabilities extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container  pt-4 pb-4\">\r\n                <div\r\n                    // id=\"knowledgeBank\"\r\n                    className=\"row  d-flex justify-content-center\"\r\n                    style={{ color: 'rgba(255, 255, 255, 0.699)' }}\r\n                >\r\n                    <div\r\n                        className=\"row m-auto pb-2 d-flex justify-content-center\"\r\n                        style={{ width: '100%' }}\r\n                    >\r\n                        <div className=\"text-primary text-wrap\">\r\n                            <span style={{ fontSize: '2.5rem' }}>\r\n                                {'Production Capabilities'}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <KnowledgeBankViewLeft\r\n                        title=\"3D Printing\"\r\n                        info={\r\n                            <span>\r\n                                Rapid prototyping and customized product\r\n                                development made easy with additive\r\n                                manufacturing.\r\n                                <br /> <br />\r\n                                \r\n                                <div className=\"text-primary\">\r\n                                    #Medical #Dental #IndustrialProduct\r\n                                    #Prototyping #Architecture #Art&Craft\r\n                                </div>\r\n                            </span>\r\n                        }\r\n                        image={logo}\r\n                    />\r\n                    <KnowledgeBankViewLeft\r\n                        title=\"LASER Cutting\"\r\n                        info={\r\n                            <span>\r\n                                For precision 2D profile cutting, template and\r\n                                decoration items.\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <br /> <br />\r\n                                \r\n                                <div className=\"text-primary\">\r\n                                    #Signage #Garment #Architecture #Art&Craft{' '}\r\n                                </div>\r\n                            </span>\r\n                        }\r\n                        image={logo1}\r\n                    />\r\n                    <KnowledgeBankViewLeft\r\n                        title=\"Plasma Cutting\"\r\n                        info={\r\n                            <span>\r\n                                Quick and simple way to cut any metal that\r\n                                conducts electricity such as steel, stainless\r\n                                steel, aluminium, copper, brass and other\r\n                                conductive metals.\r\n                                <br />\r\n                                <br />\r\n                                <div className=\"text-primary\">\r\n                                    #Signage #MetalCut #Engineering\r\n                                    #Construction\r\n                                </div>{' '}\r\n                            </span>\r\n                        }\r\n                        image={logo2}\r\n                    />{' '}\r\n                    <KnowledgeBankViewLeft\r\n                        title=\"CNC Carving\"\r\n                        info={\r\n                            <span>\r\n                                Effective both for 2D and 3D model making in\r\n                                versatile materials - wood, composite, metal and\r\n                                styrofoam.\r\n                                <br />\r\n                                <br />\r\n                                <div className=\"text-primary\">\r\n                                    #Furniture #Signage #Interior #Decoration\r\n                                    #Architecture #Prototyping\r\n                                </div>\r\n                            </span>\r\n                        }\r\n                        image={logo3}\r\n                    />\r\n                    <KnowledgeBankViewLeft\r\n                        title=\"Vacuum Forming\"\r\n                        info={\r\n                            <span>\r\n                                Multiply your product from one to many with\r\n                                affordable custom molds.\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <div className=\"text-primary\">\r\n                                    {' '}\r\n                                    #ChocolateMold #Art&Craft #Packaging\r\n                                    <br />\r\n                                </div>\r\n                                <br />\r\n                            </span>\r\n                        }\r\n                        image={logo3}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"row m-auto pb-2 d-flex justify-content-center\"\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    <div className=\"text-primary\">\r\n                        <span style={{ fontSize: '1.5rem' }}>\r\n                            Other Local manufacturing:\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"text-primary\">\r\n                        <span style={{ fontSize: '1.5rem' }}>\r\n                            Injection Molding / Tool and Die Making / Casting /\r\n                            Metal Fabrication / Wood Working\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductionCapabilities;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\knowledgebank\\FeaturedPost.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\orderstatus\\OrderSpecView.js",["628","629","630"],"import React, { useState } from \"react\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst OrderSpecView = ({ orderData, index }) => {\r\n  const [show, showModal] = useState(false);\r\n\r\n  let iconStyles = { marginRight: \"0.5rem\" };\r\n\r\n  //Destructing order_details\r\n  const {\r\n    Model_Name,\r\n    Fabrication_Service,\r\n    Material,\r\n    Thickness,\r\n    Quantity,\r\n    Amount,\r\n    Model_Path,\r\n  } = orderData;\r\n\r\n  const closeButtonStyle = { fontSize: \"2rem\", marginRight: \"1rem\" };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary m-1\"\r\n          style={{ width: 75, fontSize: \"12px\" }}\r\n          data-toggle=\"modal\"\r\n          data-target={`#OrderSpecModal${index}`}\r\n        >\r\n          <FontAwesomeIcon icon={faEye} style={{ marginRight: 5 }} />\r\n          View\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"modal fade\"\r\n        id={`OrderSpecModal${index}`}\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"showViewModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered  d-flex justify-content-center\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div className=\"modal-content\" style={{ fontSize: \"14px\" }}>\r\n              <div className=\"modal-header m-0 p-0\">\r\n                <h5\r\n                  className=\"modal-title\"\r\n                  id=\"showViewModalLabel\"\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    marginLeft: \"1rem\",\r\n                    padding: 0,\r\n                    alignSelf: \"center\",\r\n                  }}\r\n                >\r\n                  Order Specification\r\n                </h5>\r\n                <span\r\n                  type=\"button\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  aria-hidden=\"true\"\r\n                  style={closeButtonStyle}\r\n                >\r\n                  &times;\r\n                </span>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <table className=\"table\">\r\n                  <thead className=\"thead-dark\">\r\n                    <tr>\r\n                      <th scope=\"col\">Model Name</th>\r\n                      <th scope=\"col\">Fabrication Process</th>\r\n                      <th scope=\"col\">Material</th>\r\n                      <th scope=\"col\">Thickness</th>\r\n                      <th scope=\"col\">Quantity</th>\r\n                      <th scope=\"col\">Amount</th>\r\n                      <th scope=\"col\">Download</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style={{ width: \"21%\" }}>{Model_Name}</td>\r\n                      <td style={{ width: \"21%\" }}>{Fabrication_Service}</td>\r\n                      <td style={{ width: \"21%\" }}>{Material}</td>\r\n                      <td style={{ width: \"7%\" }}>{Thickness}</td>\r\n                      <td style={{ width: \"3%\" }}>{Quantity}</td>\r\n                      <td className=\"align-middle\" style={{ width: \"7%\" }}>\r\n                        {Amount}\r\n                      </td>\r\n                      <td style={{ width: \"7%\" }}>\r\n                        <a href={Model_Path}>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            style={{ fontSize: \"12px\" }}\r\n                          >\r\n                            Download\r\n                          </button>\r\n                        </a>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderSpecView;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\newquote\\FabricationProcessSelect.js",["631","632","633"],"import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport DropDown from '../global/DropDown';\r\n\r\nconst localIpUrl = require('local-ip-url');\r\nconst ipAddress = localIpUrl('public');\r\n\r\nfunction FabricationProcessSelect({ title, parentCallback }) {\r\n    const thickness = [\r\n        {\r\n            value: 1,\r\n            label: '5 mm',\r\n        },\r\n        {\r\n            value: 2,\r\n            label: '10 mm',\r\n        },\r\n        {\r\n            value: 3,\r\n            label: '15 mm',\r\n        },\r\n    ];\r\n\r\n    const quantity = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 2,\r\n            label: '2',\r\n        },\r\n        {\r\n            value: 3,\r\n            label: '3',\r\n        },\r\n    ];\r\n\r\n    const [selectedFabrication, setfabricationlabel] = useState();\r\n    const [selectedMaterial, setSelectedMaterial] = useState();\r\n    const [fabricationService, setFabricationService] = useState();\r\n    const [materials, setMaterials] = useState();\r\n    const [selectedThickness, setSelectedThickness] = useState();\r\n    const [selectedQuantity, setSelectedQuantity] = useState();\r\n    const [hublist, setHubList] = useState();\r\n\r\n    const onFabricationServiceChange = (obj) => {\r\n        setfabricationlabel(obj);\r\n        if (obj != null) {\r\n            axios\r\n                .post(`http://${window.host}/materials`, {\r\n                    fabricationID: obj.Service_ID,\r\n                })\r\n                .then((response) => {\r\n                    if (response.data) {\r\n                        setSelectedMaterial(response.data[0]);\r\n                        setMaterials(response.data);\r\n                    }\r\n                });\r\n        } else {\r\n            setSelectedMaterial(null);\r\n            setMaterials();\r\n        }\r\n\r\n        if (obj != null) {\r\n            console.log(obj);\r\n            axios\r\n                .post(`http://${window.host}/hublist`, {\r\n                    fabricationService: obj.Name,\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.length > 0) {\r\n                        setHubList(response.data);\r\n                    } else {\r\n                        setHubList([]);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    const onMaterialChange = (obj) => {\r\n        setSelectedMaterial(obj);\r\n    };\r\n\r\n    const onthicknessChange = (obj) => {\r\n        setSelectedThickness(obj);\r\n    };\r\n\r\n    const onQuantityChange = (obj) => {\r\n        setSelectedQuantity(obj);\r\n    };\r\n\r\n    useEffect(() => {\r\n        parentCallback({\r\n            selectedFabrication,\r\n            selectedMaterial,\r\n            selectedThickness,\r\n            selectedQuantity,\r\n            hublist,\r\n        });\r\n    }, [\r\n        selectedFabrication,\r\n        selectedMaterial,\r\n        selectedQuantity,\r\n        selectedThickness,\r\n        hublist,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .post(`http://${window.host}/fabricationservice`)\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    setFabricationService(response.data);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\" mt-1 text-nowrap\">\r\n            <div className=\"col-md\">\r\n                <h5>\r\n                    {title}\r\n                    <span style={{ color: 'red' }}>*</span>\r\n                </h5>\r\n            </div>\r\n            <div className=\"row mt-3 ml-auto\">\r\n                <div className=\"col-md mb-1\">\r\n                    <DropDown\r\n                        placeHolder=\"Select Fabrication...\"\r\n                        selectedValue={selectedFabrication}\r\n                        ID=\"fabricationService\"\r\n                        options={fabricationService}\r\n                        onChange={onFabricationServiceChange}\r\n                        getOptionLabel={(options) => options.Name}\r\n                        getOptionValue={(options) => options.Service_ID}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md mb-1\">\r\n                    <DropDown\r\n                        placeholder=\"Select Material...\"\r\n                        selectedValue={selectedMaterial}\r\n                        ID=\"materials\"\r\n                        options={materials}\r\n                        onChange={onMaterialChange}\r\n                        getOptionLabel={(options) => options.Material_Name}\r\n                        getOptionValue={(options) => options.Material_ID}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md mb-1\">\r\n                    <DropDown\r\n                        placeholder=\"Select Thickness...\"\r\n                        selectedValue={selectedThickness}\r\n                        ID=\"thickness\"\r\n                        options={thickness}\r\n                        onChange={onthicknessChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md mb-1\">\r\n                    <DropDown\r\n                        placeholder=\"Enter Quantity...\"\r\n                        selectedValue={selectedQuantity}\r\n                        ID=\"quantity\"\r\n                        options={quantity}\r\n                        onChange={onQuantityChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FabricationProcessSelect;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\starrating\\RatingProgressView.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\technology.js",["634","635","636","637","638","639","640"],"import React, { Component } from \"react\";\r\nimport logo from \"../assests/3dprinting.jpg\";\r\nimport logo1 from \"../assests/lasercutting.jpg\";\r\nimport logo2 from \"../assests/CNC.png\";\r\nimport Technology from \"./technology\";\r\nimport \"./technology.css\";\r\n\r\nfunction title(props, props1, props2, id) {\r\n  return (\r\n    <div className=\"row h-100 align-items-center\">\r\n      <div className=\"col-lg-6\">\r\n        <h2 className=\"display-4 text-white\">{props}</h2>\r\n\r\n        <span className=\"lead text-white\">{props1}</span>\r\n\r\n        <img\r\n          src={props2}\r\n          alt=\"\"\r\n          className=\"img-fluid\"\r\n          style={{ height: \"300px\", paddingLeft: \"10px\" }}\r\n        />\r\n      </div>\r\n      <div className=\"col-lg-6\">\r\n        <h2 className=\"display-4 text-white\">{props}</h2>\r\n\r\n        <span className=\"lead text-white\">{props1}</span>\r\n\r\n        <img\r\n          src={props2}\r\n          alt=\"\"\r\n          className=\"img-fluid\"\r\n          style={{ height: \"300px\", paddingLeft: \"10px\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction mirrorSection(props, props1, props2, id) {\r\n  return <div></div>;\r\n}\r\nclass technology extends Component {\r\n  render() {\r\n    const style = {\r\n      height: \"auto\",\r\n      background: \"rgb(58, 57, 57)\",\r\n    };\r\n    return (\r\n      <div id=\"technology\">\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default technology;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\RequestCode.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\main\\aboutUs.js",["641"],"import React, { Component } from \"react\";\r\nimport logo from \"../assests/demo.png\";\r\n\r\nclass AboutUs extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"container py-5\">\r\n        <h1 className=\"text-primary mt-4\">ABOUT US</h1>\r\n        <p>\r\n          The Makerko is a web of production platform, an online marketplace\r\n          that connects local producers and end-users. End-users will have these\r\n          ability to request the production of a product via the platform. This\r\n          platform addresses local challenges in Nepal around production,\r\n          including: incorrect designs for manufacturing, obtaining a workable\r\n          prototype, lack of access to design/manufacturing experts and\r\n          marketing and communication gaps. The makerko platform will make the\r\n          capabilities of local producers more visible to consumers, as the\r\n          producers offer new products and innovations. Users will then have the\r\n          ability to upload a work order (with a product design if applicable)\r\n          and be connected with a local producer that will execute the work\r\n          order. The platform also brings together idle machines, decentralized\r\n          technology tools, global and remote expertise, diverse skill sets, and\r\n          a growing supplier network, making the product development process\r\n          more reliable for consumers.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutUs;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\form\\Login.js",["642","643","644","645","646","647","648","649","650","651","652","653","654","655"],"import { Formik } from 'formik';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './loginPage.css';\r\nimport FormTextBox, { PasswordField } from '../global/TextBox';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport Register from './Register';\r\n\r\nconst localIpUrl = require('local-ip-url');\r\nconst ipAddress = localIpUrl('public');\r\n\r\nexport default class Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: null,\r\n        users: null,\r\n        hidden: true,\r\n        flag: '',\r\n        loggedInStatus: '',\r\n    };\r\n\r\n    onClickVerify = (event) => {\r\n        event.preventDefault();\r\n        axios\r\n            .post(`http://${window.host}/verify-login`, {\r\n                email: this.state.email,\r\n            })\r\n            .then((response) => {\r\n                if (response.data.message) {\r\n                    this.props.history.push({\r\n                        pathname: '/verify',\r\n                        data: this.state.email,\r\n                        state: { email: this.state.email },\r\n                        //send data to verify page\r\n                    });\r\n                    console.log(this.state.email);\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            email,\r\n            password,\r\n            error,\r\n            hidden,\r\n            flag,\r\n            loggedInStatus,\r\n            props,\r\n        } = this.state;\r\n        const { match } = this.props;\r\n        const url = match.path;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"loginPage\">\r\n                    <div>\r\n                        <div className=\"card card-body\" id=\"loginCard\">\r\n                            <div className=\"text-center\">\r\n                                <i className=\"fa fa-user fa-2x text-primary\"></i>\r\n                            </div>\r\n\r\n                            <h3 className=\"text-center\">Sign In</h3>\r\n                            <hr />\r\n                            {error && (\r\n                                <div\r\n                                    className=\"alert alert-warning\"\r\n                                    role=\"alert\"\r\n                                >\r\n                                    {error}\r\n                                </div>\r\n                            )}\r\n                            <div>\r\n                                <Formik\r\n                                    initialValues={{ email: '', password: '' }}\r\n                                    validate={(values) => {\r\n                                        this.setState({ email: values.email });\r\n                                        const errors = {};\r\n                                        if (!values.email) {\r\n                                            errors.email = 'Required';\r\n                                        } else if (\r\n                                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\r\n                                                values.email\r\n                                            )\r\n                                        ) {\r\n                                            errors.email =\r\n                                                'Invalid email address';\r\n                                        }\r\n                                        if (!values.password) {\r\n                                            errors.password = 'Required';\r\n                                        } else if (values.password.length < 6) {\r\n                                            errors.password =\r\n                                                'Password must contain atleast 6 letters';\r\n                                        }\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={(values, { setSubmitting }) => {\r\n                                        setTimeout(() => {\r\n                                            axios\r\n                                                .post(\r\n                                                    `http://${window.host}/login`,\r\n                                                    {\r\n                                                        email: values.email,\r\n                                                        password:\r\n                                                            values.password,\r\n                                                    }\r\n                                                )\r\n                                                .then((response) => {\r\n                                                    if (\r\n                                                        response.data.userInfo\r\n                                                    ) {\r\n                                                        var date = new Date();\r\n                                                        date.setFullYear(\r\n                                                            date.getFullYear() +\r\n                                                                1\r\n                                                        );\r\n                                                        document.cookie = `userInfo = ${JSON.stringify(\r\n                                                            response.data\r\n                                                        )}; expires= ${date.toUTCString()}; path=/`; //Storing login info value in Cookie\r\n                                                    }\r\n\r\n                                                    if (\r\n                                                        response.data.message &&\r\n                                                        response.data\r\n                                                            .verified === 0\r\n                                                    ) {\r\n                                                        this.setState({\r\n                                                            error:\r\n                                                                response.data\r\n                                                                    .message,\r\n                                                            hidden: false,\r\n                                                            email: values.email,\r\n                                                        });\r\n                                                    } else if (\r\n                                                        response.data.message\r\n                                                    ) {\r\n                                                        this.setState({\r\n                                                            error:\r\n                                                                response.data\r\n                                                                    .message,\r\n                                                        });\r\n                                                    } else {\r\n                                                        window.location.href =\r\n                                                            '/';\r\n                                                    }\r\n                                                });\r\n                                            setSubmitting(false);\r\n                                        }, 100);\r\n                                    }}\r\n                                >\r\n                                    {({\r\n                                        values,\r\n                                        errors,\r\n                                        touched,\r\n                                        handleChange,\r\n                                        handleBlur,\r\n                                        handleSubmit,\r\n                                        isSubmitting,\r\n                                        /* and other goodies */\r\n                                    }) => (\r\n                                        <form onSubmit={handleSubmit}>\r\n                                            <div className=\"row m-1 pb-1 d-flex align-items-center\">\r\n                                                <FormTextBox\r\n                                                    type=\"email\"\r\n                                                    placeholder=\"Enter Email\"\r\n                                                    name=\"email\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"row m-auto border\">\r\n                                                <PasswordField\r\n                                                    type=\"password\"\r\n                                                    placeholder=\"Enter Password\"\r\n                                                    name=\"password\"\r\n                                                    style={{\r\n                                                        paddingRight: '30px',\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <span className=\"text-center small\">\r\n                                                Forget your password?{' '}\r\n                                                <a href={`${url}/identity`}>\r\n                                                    {' '}\r\n                                                    Reset it Here\r\n                                                </a>\r\n                                            </span>\r\n                                            <span className=\"row d-flex justify-content-center m-2\">\r\n                                                <button\r\n                                                    type=\"submit\"\r\n                                                    disabled={isSubmitting}\r\n                                                    className=\"btn btn-primary d-flex justify-content-center\"\r\n                                                >\r\n                                                    Sign In\r\n                                                </button>\r\n                                            </span>\r\n                                        </form>\r\n                                    )}\r\n                                </Formik>\r\n                                <span className=\"text-center small d-flex justify-content-center text-primary\">\r\n                                    <p\r\n                                        type=\"button\"\r\n                                        hidden={hidden}\r\n                                        onClick={this.onClickVerify}\r\n                                    >\r\n                                        Click here to verify\r\n                                    </p>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center mt-3\">\r\n                                <span className=\"text-center small\">\r\n                                    Do not have an account?{' '}\r\n                                    <a\r\n                                        type=\"button\"\r\n                                        className=\"text-primary\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#signmodal\"\r\n                                    >\r\n                                        Sign up\r\n                                    </a>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\Modal.js",[],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\MfgHubsViewPage.js",["656","657","658","659","660","661","662"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\customer\\UserProfileEdit.js",["663","664","665","666","667","668","669","670","671","672","673","674"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\featureProject\\ModalDelete.js",["675","676"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\manufacturer\\OtherServices.js",["677","678","679","680"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\newquote\\NewQuote.js",["681"],"import React, { Component } from 'react';\r\nimport Dropzone from '../global/Dropzone';\r\nimport HubListArea from './HubListArea';\r\nimport '../global/dropZone.css';\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\nimport { GetCookiesInfo } from '../global/GlobalFunction';\r\nimport FabricationProcessSelect from './FabricationProcessSelect';\r\nimport Alert from '../global/Alert';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst localIpUrl = require('local-ip-url');\r\nconst ipAddress = localIpUrl('public');\r\n\r\nvar CryptoJS = require('crypto-js');\r\n\r\nconst SECRET_KEY = 'FabHubs@promech';\r\n\r\nclass NewQuote extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            categories: [\r\n                { id: 1, value: 'Request for Prototype' },\r\n                { id: 2, value: 'Check Design' },\r\n                { id: 3, value: 'Request Quotation' },\r\n            ],\r\n            checkedItems: new Map(),\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    state = {\r\n        filename: '',\r\n        filepath: '',\r\n        email: '',\r\n        dropDownData: null,\r\n        message: '',\r\n        isSuccess: true,\r\n        fileData: null,\r\n        user: '',\r\n        errMsg: undefined,\r\n        fileUpload: false,\r\n        acceptFile: 'pdf, jpeg, dxf, stl, obj, step, tif',\r\n    };\r\n    handleChange(event) {\r\n        var isChecked = event.target.checked;\r\n        var item = event.target.value;\r\n\r\n        this.setState((prevState) => ({\r\n            checkedItems: prevState.checkedItems.set(item, isChecked),\r\n        }));\r\n    }\r\n    handleSubmit(event) {\r\n        console.log(this.state.checkedItems);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onClickValidate = () => {\r\n        const { email, customerID } = GetCookiesInfo();\r\n        const { dropDownData, fileData } = this.state;\r\n        if (\r\n            !dropDownData.selectedFabrication ||\r\n            !dropDownData.selectedMaterial ||\r\n            !dropDownData.selectedThickness ||\r\n            !dropDownData.selectedQuantity\r\n        ) {\r\n            return this.setState({\r\n                errMsg: 'All Fields are required',\r\n            });\r\n        } else if (!fileData) {\r\n            return this.setState({\r\n                errMsg: 'File not Selected',\r\n            });\r\n        }\r\n\r\n        //Encryption\r\n        var encryptedUserID = CryptoJS.AES.encrypt(\r\n            email,\r\n            SECRET_KEY\r\n        ).toString();\r\n        var encryptedKey = encryptedUserID.replace(/\\//g, 'slash');\r\n        console.log(encryptedKey);\r\n\r\n        //const userID = email;\r\n        const fabricationProcess = dropDownData.selectedFabrication.Name;\r\n        const material = dropDownData.selectedMaterial.Material_Name;\r\n        const thickness = dropDownData.selectedThickness.label;\r\n        const quantity = dropDownData.selectedQuantity.label;\r\n        const { fileName, filePath } = fileData;\r\n        const validationPageUrl = `http://${window.host}/validation-page/${encryptedKey}`;\r\n\r\n        const fileURL = `http://${ipAddress}:3000/${filePath}`;\r\n\r\n        axios\r\n            .post(`http://${window.host}/order-specification`, {\r\n                modelName: fileName,\r\n                fabricationService: fabricationProcess,\r\n                material: material,\r\n                thickness: thickness,\r\n                quantity: quantity,\r\n                modelPath: fileURL,\r\n                customerID: customerID,\r\n                //#region old declaration\r\n                // id: userID,\r\n                // filename: fileName,\r\n                // fabricationprocess: fabricationProcess,\r\n                // material: material,\r\n                // thickness: thickness,\r\n                // quantity: quantity,\r\n                // fileurl: fileURL,\r\n                //#endregion\r\n                validationPagePath: validationPageUrl,\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                if (response.data.message) {\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        isSuccess: false,\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    handleCallback = (childData) => {\r\n        this.setState({ errMsg: '' });\r\n        console.log(childData);\r\n        this.setState({ dropDownData: childData });\r\n    };\r\n\r\n    dropzoneHandleCallback = (childData) => {\r\n        this.setState({ errMsg: '' });\r\n        this.setState({ fileData: childData });\r\n    };\r\n\r\n    render() {\r\n        const { isSuccess, dropDownData, errMsg } = this.state;\r\n        return (\r\n            <div\r\n                className=\"p-3\"\r\n                // style={{\r\n                //   backgroundColor: \"rgb(58, 57, 57)\",\r\n                //   height: \"auto\",\r\n                // }}\r\n            >\r\n                <div\r\n                    className=\"container mt-5 mb-5\"\r\n                    style={{\r\n                        borderRadius: '5px',\r\n                        borderColor: 'lightgray',\r\n                        borderStyle: 'solid',\r\n                        borderWidth: '1px',\r\n                    }}\r\n                >\r\n                    <div className=\"p-3\">\r\n                        All fields with <span style={{ color: 'red' }}>*</span>{' '}\r\n                        are required\r\n                    </div>\r\n                    {errMsg && (\r\n                        <div className=\"pl-3\">\r\n                            <Alert message={errMsg} />\r\n                        </div>\r\n                    )}\r\n                    <div className=\"p-3\">\r\n                        <FabricationProcessSelect\r\n                            title=\"Fabrication Process\"\r\n                            parentCallback={this.handleCallback}\r\n                        />\r\n                    </div>\r\n                    <hr\r\n                        style={{\r\n                            borderColor: 'lightgray',\r\n                            boxShadow: '0px 3px 2px gray',\r\n                        }}\r\n                    />\r\n                    <div className=\"p-3\">\r\n                        <Dropzone\r\n                            title=\"Upload File\"\r\n                            fileNote=\"pdf, jpeg, dxf, stl, obj, step, tif\"\r\n                            requirementNote=\"File size < 15 MB\"\r\n                            parentCallback={this.dropzoneHandleCallback}\r\n                            user={this.state.user}\r\n                            error={this.state.errMsg}\r\n                            fileUpload={this.state.fileUpload}\r\n                        />\r\n                    </div>\r\n                    <hr\r\n                        style={{\r\n                            borderColor: 'lightgray',\r\n                            boxShadow: '0px 3px 2px gray',\r\n                        }}\r\n                    />\r\n                    <div className=\"p-3\">\r\n                        <HubListArea\r\n                            title=\"Select Your Hub\"\r\n                            HubList={dropDownData}\r\n                        />\r\n                    </div>\r\n                    <hr\r\n                        style={{\r\n                            borderColor: 'lightgray',\r\n                            boxShadow: '0px 3px 2px gray',\r\n                        }}\r\n                    />{' '}\r\n                    <div\r\n                        className=\"row p-3 mt-5\"\r\n                        style={{\r\n                            backgroundColor: 'white',\r\n                        }}\r\n                    >\r\n                        {this.state.categories.map((item) => (\r\n                            <div className=\"col ml-4\">\r\n                                <h5>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        value={item.id}\r\n                                        onChange={this.handleChange}\r\n                                        style={{\r\n                                            marginRight: '10px',\r\n                                            marginLeft: '10px',\r\n                                        }}\r\n                                    />\r\n                                    {item.value}\r\n                                </h5>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"p-3 d-flex justify-content-center\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary btn-lg\"\r\n                            //onClick={this.onClickValidate}\r\n                        >\r\n                            Validate\r\n                        </button>\r\n                    </div>\r\n                    <div\r\n                        className=\"alert alert-secondary\"\r\n                        role=\"alert\"\r\n                        hidden={isSuccess}\r\n                    >\r\n                        {this.state.message}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewQuote;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\orderstatus\\ManufacturerOrderStatus.js",["682","683","684","685","686","687","688","689","690","691"],"E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\global\\TextBox.js",["692"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFormikContext } from 'formik';\r\nimport './TextBox.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\r\nconst eye = <FontAwesomeIcon icon={faEye} />;\r\n\r\nconst FormTextBox = ({ type, placeholder, name, style, value }) => {\r\n    const { errors, touched, handleChange } = useFormikContext();\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                id={name}\r\n                style={style}\r\n                className=\"form-control\"\r\n                placeholder={placeholder}\r\n                name={name}\r\n                onChange={handleChange(name)}\r\n                value={value}\r\n            />\r\n            <div\r\n                className=\"text-danger\"\r\n                style={{\r\n                    fontSize: '10pt',\r\n                }}\r\n            >\r\n                {errors[name] && touched[name] && errors[name]}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nFormTextBox.prototype = {\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string.isRequired,\r\n};\r\n\r\nFormTextBox.defaultProps = {\r\n    type: 'text',\r\n    style: { borderRadius: '5px' },\r\n};\r\n\r\nexport default FormTextBox;\r\n\r\nexport const TextBox = ({\r\n    type,\r\n    placeholder,\r\n    name,\r\n    style,\r\n    error,\r\n    onChange,\r\n    label,\r\n    value\r\n}) => {\r\n    return (\r\n        <>\r\n            {label ? (\r\n                <div className=\"row\">\r\n                    <div className=\"col-4 d-flex align-items-center\">\r\n                        <span className=\"font-weight-bold\">{label}</span>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input\r\n                            type={type}\r\n                            style={style}\r\n                            className=\"form-control\"\r\n                            placeholder={placeholder}\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                        />\r\n                        <div\r\n                            className=\"text-danger\"\r\n                            style={{\r\n                                fontSize: '10pt',\r\n                            }}\r\n                        >\r\n                            {error}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <input\r\n                        type={type}\r\n                        style={style}\r\n                        className=\"form-control\"\r\n                        placeholder={placeholder}\r\n                        name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                    />\r\n                    <div\r\n                        className=\"text-danger\"\r\n                        style={{\r\n                            fontSize: '10pt',\r\n                        }}\r\n                    >\r\n                        {error}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nTextBox.prototype = {\r\n    type: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string.isRequired,\r\n};\r\n\r\nTextBox.defaultProps = {\r\n    type: 'text',\r\n    style: { borderRadius: '3px' },\r\n};\r\n\r\nexport const PasswordField = ({ type, placeholder, name, style }) => {\r\n    const { errors, touched, handleChange } = useFormikContext();\r\n    const [types, setTypes] = useState(type);\r\n    //setTypes(type);\r\n\r\n    const handleClick = () => setTypes(types ? false : true);\r\n\r\n    return (\r\n        <div style={{ flex: 1}}>\r\n            {console.log(types)}\r\n            <div id=\"passwordbox\">\r\n                <input\r\n                    type={types ? 'password' : 'text'}\r\n                    id={name}\r\n                    style={{ paddingRight: '30px' }}\r\n                    className=\"form-control\"\r\n                    placeholder={placeholder}\r\n                    name={name}\r\n                    onChange={handleChange(name)}\r\n                />{' '}\r\n                {/* <i\r\n          id=\"icon\"\r\n          onClick={handleClick}\r\n          className={types ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\r\n        /> */}\r\n                <ion-icon\r\n                    id=\"icon\"\r\n                    onClick={handleClick}\r\n                    name={types ? 'eye' : 'eye-off'}\r\n                ></ion-icon>\r\n            </div>\r\n\r\n            <div\r\n                className=\"text-danger\"\r\n                style={{\r\n                    fontSize: '10pt',\r\n                }}\r\n            >\r\n                {errors[name] && touched[name] && errors[name]}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPasswordField.prototype = {\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string.isRequired,\r\n};\r\n\r\nPasswordField.defaultProps = {\r\n    type: 'text',\r\n    style: { borderRadius: '5px' },\r\n};\r\n<script src=\"https://unpkg.com/ionicons@5.4.0/dist/ionicons.js\"></script>;\r\n","E:\\Files\\ProMech\\GitHub\\Makerko\\src\\components\\knowledgebank\\MainFeaturedPost.js",[],{"ruleId":"693","replacedBy":"694"},{"ruleId":"695","replacedBy":"696"},{"ruleId":"693","replacedBy":"697"},{"ruleId":"695","replacedBy":"698"},{"ruleId":"699","severity":1,"message":"700","line":50,"column":7,"nodeType":"701","messageId":"702","endLine":50,"endColumn":12},{"ruleId":"699","severity":1,"message":"703","line":24,"column":30,"nodeType":"701","messageId":"702","endLine":24,"endColumn":36},{"ruleId":"693","replacedBy":"704"},{"ruleId":"695","replacedBy":"705"},{"ruleId":"706","severity":1,"message":"707","line":28,"column":25,"nodeType":"708","messageId":"709","endLine":28,"endColumn":26},{"ruleId":"706","severity":1,"message":"707","line":29,"column":25,"nodeType":"708","messageId":"709","endLine":29,"endColumn":26},{"ruleId":"706","severity":1,"message":"707","line":35,"column":28,"nodeType":"708","messageId":"709","endLine":35,"endColumn":29},{"ruleId":"706","severity":1,"message":"707","line":36,"column":28,"nodeType":"708","messageId":"709","endLine":36,"endColumn":29},{"ruleId":"706","severity":1,"message":"707","line":43,"column":33,"nodeType":"708","messageId":"709","endLine":43,"endColumn":34},{"ruleId":"699","severity":1,"message":"710","line":7,"column":10,"nodeType":"701","messageId":"702","endLine":7,"endColumn":14},{"ruleId":"699","severity":1,"message":"711","line":7,"column":16,"nodeType":"701","messageId":"702","endLine":7,"endColumn":23},{"ruleId":"699","severity":1,"message":"712","line":8,"column":10,"nodeType":"701","messageId":"702","endLine":8,"endColumn":18},{"ruleId":"699","severity":1,"message":"713","line":8,"column":20,"nodeType":"701","messageId":"702","endLine":8,"endColumn":31},{"ruleId":"699","severity":1,"message":"714","line":2,"column":8,"nodeType":"701","messageId":"702","endLine":2,"endColumn":14},{"ruleId":"693","replacedBy":"715"},{"ruleId":"695","replacedBy":"716"},{"ruleId":"699","severity":1,"message":"717","line":1,"column":10,"nodeType":"701","messageId":"702","endLine":1,"endColumn":22},{"ruleId":"699","severity":1,"message":"718","line":3,"column":10,"nodeType":"701","messageId":"702","endLine":3,"endColumn":14},{"ruleId":"699","severity":1,"message":"719","line":8,"column":7,"nodeType":"701","messageId":"702","endLine":8,"endColumn":13},{"ruleId":"699","severity":1,"message":"720","line":13,"column":12,"nodeType":"701","messageId":"702","endLine":13,"endColumn":18},{"ruleId":"699","severity":1,"message":"721","line":14,"column":12,"nodeType":"701","messageId":"702","endLine":14,"endColumn":16},{"ruleId":"699","severity":1,"message":"722","line":14,"column":18,"nodeType":"701","messageId":"702","endLine":14,"endColumn":25},{"ruleId":"699","severity":1,"message":"723","line":15,"column":11,"nodeType":"701","messageId":"702","endLine":15,"endColumn":23},{"ruleId":"699","severity":1,"message":"724","line":19,"column":11,"nodeType":"701","messageId":"702","endLine":19,"endColumn":23},{"ruleId":"725","severity":1,"message":"726","line":65,"column":33,"nodeType":"727","endLine":65,"endColumn":79},{"ruleId":"728","severity":1,"message":"729","line":122,"column":33,"nodeType":"727","endLine":122,"endColumn":66},{"ruleId":"728","severity":1,"message":"729","line":127,"column":33,"nodeType":"727","endLine":127,"endColumn":66},{"ruleId":"728","severity":1,"message":"729","line":132,"column":33,"nodeType":"727","endLine":132,"endColumn":66},{"ruleId":"728","severity":1,"message":"729","line":147,"column":33,"nodeType":"727","endLine":147,"endColumn":66},{"ruleId":"728","severity":1,"message":"729","line":152,"column":33,"nodeType":"727","endLine":152,"endColumn":66},{"ruleId":"728","severity":1,"message":"729","line":157,"column":33,"nodeType":"727","endLine":157,"endColumn":66},{"ruleId":"728","severity":1,"message":"729","line":180,"column":33,"nodeType":"727","endLine":180,"endColumn":66},{"ruleId":"728","severity":1,"message":"729","line":186,"column":33,"nodeType":"727","endLine":186,"endColumn":66},{"ruleId":"728","severity":1,"message":"729","line":208,"column":33,"nodeType":"727","endLine":208,"endColumn":45},{"ruleId":"728","severity":1,"message":"729","line":213,"column":33,"nodeType":"727","endLine":213,"endColumn":45},{"ruleId":"728","severity":1,"message":"729","line":227,"column":33,"nodeType":"727","endLine":227,"endColumn":45},{"ruleId":"728","severity":1,"message":"729","line":230,"column":33,"nodeType":"727","endLine":230,"endColumn":45},{"ruleId":"699","severity":1,"message":"730","line":6,"column":8,"nodeType":"701","messageId":"702","endLine":6,"endColumn":19},{"ruleId":"699","severity":1,"message":"731","line":10,"column":7,"nodeType":"701","messageId":"702","endLine":10,"endColumn":16},{"ruleId":"699","severity":1,"message":"732","line":15,"column":11,"nodeType":"701","messageId":"702","endLine":15,"endColumn":15},{"ruleId":"699","severity":1,"message":"731","line":10,"column":7,"nodeType":"701","messageId":"702","endLine":10,"endColumn":16},{"ruleId":"699","severity":1,"message":"733","line":31,"column":17,"nodeType":"701","messageId":"702","endLine":31,"endColumn":22},{"ruleId":"699","severity":1,"message":"734","line":31,"column":24,"nodeType":"701","messageId":"702","endLine":31,"endColumn":32},{"ruleId":"693","replacedBy":"735"},{"ruleId":"695","replacedBy":"736"},{"ruleId":"699","severity":1,"message":"737","line":2,"column":8,"nodeType":"701","messageId":"702","endLine":2,"endColumn":13},{"ruleId":"699","severity":1,"message":"731","line":8,"column":7,"nodeType":"701","messageId":"702","endLine":8,"endColumn":16},{"ruleId":"699","severity":1,"message":"738","line":16,"column":21,"nodeType":"701","messageId":"702","endLine":16,"endColumn":30},{"ruleId":"699","severity":1,"message":"731","line":10,"column":7,"nodeType":"701","messageId":"702","endLine":10,"endColumn":16},{"ruleId":"699","severity":1,"message":"739","line":146,"column":13,"nodeType":"701","messageId":"702","endLine":146,"endColumn":20},{"ruleId":"699","severity":1,"message":"740","line":147,"column":13,"nodeType":"701","messageId":"702","endLine":147,"endColumn":21},{"ruleId":"699","severity":1,"message":"741","line":148,"column":13,"nodeType":"701","messageId":"702","endLine":148,"endColumn":18},{"ruleId":"699","severity":1,"message":"742","line":151,"column":13,"nodeType":"701","messageId":"702","endLine":151,"endColumn":21},{"ruleId":"699","severity":1,"message":"743","line":154,"column":13,"nodeType":"701","messageId":"702","endLine":154,"endColumn":20},{"ruleId":"699","severity":1,"message":"712","line":155,"column":13,"nodeType":"701","messageId":"702","endLine":155,"endColumn":21},{"ruleId":"699","severity":1,"message":"744","line":156,"column":13,"nodeType":"701","messageId":"702","endLine":156,"endColumn":20},{"ruleId":"699","severity":1,"message":"745","line":157,"column":13,"nodeType":"701","messageId":"702","endLine":157,"endColumn":21},{"ruleId":"699","severity":1,"message":"746","line":159,"column":13,"nodeType":"701","messageId":"702","endLine":159,"endColumn":18},{"ruleId":"699","severity":1,"message":"747","line":160,"column":13,"nodeType":"701","messageId":"702","endLine":160,"endColumn":19},{"ruleId":"748","severity":1,"message":"749","line":349,"column":57,"nodeType":"750","endLine":349,"endColumn":71},{"ruleId":"725","severity":1,"message":"726","line":368,"column":53,"nodeType":"727","endLine":377,"endColumn":55},{"ruleId":"748","severity":1,"message":"749","line":399,"column":49,"nodeType":"750","endLine":399,"endColumn":63},{"ruleId":"725","severity":1,"message":"726","line":418,"column":57,"nodeType":"727","endLine":428,"endColumn":59},{"ruleId":"699","severity":1,"message":"731","line":16,"column":7,"nodeType":"701","messageId":"702","endLine":16,"endColumn":16},{"ruleId":"699","severity":1,"message":"721","line":23,"column":12,"nodeType":"701","messageId":"702","endLine":23,"endColumn":16},{"ruleId":"699","severity":1,"message":"751","line":23,"column":18,"nodeType":"701","messageId":"702","endLine":23,"endColumn":25},{"ruleId":"699","severity":1,"message":"752","line":24,"column":12,"nodeType":"701","messageId":"702","endLine":24,"endColumn":16},{"ruleId":"699","severity":1,"message":"753","line":24,"column":18,"nodeType":"701","messageId":"702","endLine":24,"endColumn":25},{"ruleId":"699","severity":1,"message":"754","line":25,"column":11,"nodeType":"701","messageId":"702","endLine":25,"endColumn":19},{"ruleId":"699","severity":1,"message":"755","line":27,"column":9,"nodeType":"701","messageId":"702","endLine":27,"endColumn":19},{"ruleId":"756","severity":1,"message":"757","line":43,"column":31,"nodeType":"758","endLine":43,"endColumn":44},{"ruleId":"756","severity":1,"message":"759","line":45,"column":37,"nodeType":"760","endLine":47,"endColumn":18},{"ruleId":"761","severity":1,"message":"762","line":46,"column":48,"nodeType":"708","messageId":"763","endLine":46,"endColumn":50},{"ruleId":"699","severity":1,"message":"764","line":71,"column":11,"nodeType":"701","messageId":"702","endLine":71,"endColumn":23},{"ruleId":"765","severity":1,"message":"766","line":94,"column":24,"nodeType":"767","messageId":"768","endLine":94,"endColumn":26},{"ruleId":"699","severity":1,"message":"769","line":193,"column":46,"nodeType":"701","messageId":"702","endLine":193,"endColumn":56},{"ruleId":"699","severity":1,"message":"770","line":1,"column":17,"nodeType":"701","messageId":"702","endLine":1,"endColumn":26},{"ruleId":"699","severity":1,"message":"771","line":7,"column":5,"nodeType":"701","messageId":"702","endLine":7,"endColumn":11},{"ruleId":"699","severity":1,"message":"772","line":9,"column":5,"nodeType":"701","messageId":"702","endLine":9,"endColumn":18},{"ruleId":"699","severity":1,"message":"773","line":15,"column":5,"nodeType":"701","messageId":"702","endLine":15,"endColumn":19},{"ruleId":"699","severity":1,"message":"774","line":19,"column":10,"nodeType":"701","messageId":"702","endLine":19,"endColumn":23},{"ruleId":"699","severity":1,"message":"775","line":28,"column":12,"nodeType":"701","messageId":"702","endLine":28,"endColumn":30},{"ruleId":"699","severity":1,"message":"712","line":46,"column":29,"nodeType":"701","messageId":"702","endLine":46,"endColumn":37},{"ruleId":"756","severity":1,"message":"776","line":50,"column":8,"nodeType":"777","endLine":50,"endColumn":10,"suggestions":"778"},{"ruleId":"699","severity":1,"message":"779","line":57,"column":29,"nodeType":"701","messageId":"702","endLine":57,"endColumn":32},{"ruleId":"756","severity":1,"message":"776","line":74,"column":8,"nodeType":"777","endLine":74,"endColumn":10,"suggestions":"780"},{"ruleId":"699","severity":1,"message":"730","line":6,"column":8,"nodeType":"701","messageId":"702","endLine":6,"endColumn":19},{"ruleId":"699","severity":1,"message":"731","line":11,"column":7,"nodeType":"701","messageId":"702","endLine":11,"endColumn":16},{"ruleId":"699","severity":1,"message":"732","line":16,"column":11,"nodeType":"701","messageId":"702","endLine":16,"endColumn":15},{"ruleId":"699","severity":1,"message":"733","line":9,"column":9,"nodeType":"701","messageId":"702","endLine":9,"endColumn":14},{"ruleId":"699","severity":1,"message":"781","line":11,"column":9,"nodeType":"701","messageId":"702","endLine":11,"endColumn":17},{"ruleId":"699","severity":1,"message":"782","line":12,"column":9,"nodeType":"701","messageId":"702","endLine":12,"endColumn":20},{"ruleId":"699","severity":1,"message":"783","line":14,"column":9,"nodeType":"701","messageId":"702","endLine":14,"endColumn":21},{"ruleId":"699","severity":1,"message":"784","line":16,"column":11,"nodeType":"701","messageId":"702","endLine":16,"endColumn":20},{"ruleId":"699","severity":1,"message":"712","line":34,"column":29,"nodeType":"701","messageId":"702","endLine":34,"endColumn":37},{"ruleId":"756","severity":1,"message":"785","line":41,"column":8,"nodeType":"777","endLine":41,"endColumn":10,"suggestions":"786"},{"ruleId":"699","severity":1,"message":"787","line":24,"column":11,"nodeType":"701","messageId":"702","endLine":24,"endColumn":15},{"ruleId":"693","replacedBy":"788"},{"ruleId":"695","replacedBy":"789"},{"ruleId":"699","severity":1,"message":"790","line":4,"column":8,"nodeType":"701","messageId":"702","endLine":4,"endColumn":13},{"ruleId":"699","severity":1,"message":"752","line":9,"column":7,"nodeType":"701","messageId":"702","endLine":9,"endColumn":11},{"ruleId":"761","severity":1,"message":"762","line":161,"column":27,"nodeType":"708","messageId":"763","endLine":161,"endColumn":29},{"ruleId":"699","severity":1,"message":"791","line":1,"column":10,"nodeType":"701","messageId":"702","endLine":1,"endColumn":18},{"ruleId":"699","severity":1,"message":"712","line":26,"column":21,"nodeType":"701","messageId":"702","endLine":26,"endColumn":29},{"ruleId":"765","severity":1,"message":"792","line":46,"column":50,"nodeType":"767","messageId":"768","endLine":46,"endColumn":52},{"ruleId":"761","severity":1,"message":"762","line":48,"column":27,"nodeType":"708","messageId":"763","endLine":48,"endColumn":29},{"ruleId":"748","severity":1,"message":"749","line":62,"column":17,"nodeType":"750","endLine":71,"endColumn":19},{"ruleId":"761","severity":1,"message":"762","line":145,"column":23,"nodeType":"708","messageId":"763","endLine":145,"endColumn":25},{"ruleId":"765","severity":1,"message":"793","line":156,"column":50,"nodeType":"767","messageId":"794","endLine":156,"endColumn":52},{"ruleId":"699","severity":1,"message":"769","line":220,"column":38,"nodeType":"701","messageId":"702","endLine":220,"endColumn":48},{"ruleId":"699","severity":1,"message":"795","line":1,"column":17,"nodeType":"701","messageId":"702","endLine":1,"endColumn":26},{"ruleId":"699","severity":1,"message":"770","line":1,"column":17,"nodeType":"701","messageId":"702","endLine":1,"endColumn":26},{"ruleId":"699","severity":1,"message":"796","line":1,"column":8,"nodeType":"701","messageId":"702","endLine":1,"endColumn":13},{"ruleId":"699","severity":1,"message":"797","line":1,"column":17,"nodeType":"701","messageId":"702","endLine":1,"endColumn":25},{"ruleId":"699","severity":1,"message":"795","line":1,"column":27,"nodeType":"701","messageId":"702","endLine":1,"endColumn":36},{"ruleId":"756","severity":1,"message":"798","line":10,"column":5,"nodeType":"701","endLine":10,"endColumn":14,"suggestions":"799"},{"ruleId":"756","severity":1,"message":"800","line":17,"column":8,"nodeType":"777","endLine":17,"endColumn":18,"suggestions":"801"},{"ruleId":"699","severity":1,"message":"802","line":22,"column":9,"nodeType":"701","messageId":"702","endLine":22,"endColumn":16},{"ruleId":"699","severity":1,"message":"803","line":5,"column":5,"nodeType":"701","messageId":"702","endLine":5,"endColumn":16},{"ruleId":"699","severity":1,"message":"731","line":14,"column":7,"nodeType":"701","messageId":"702","endLine":14,"endColumn":16},{"ruleId":"699","severity":1,"message":"804","line":32,"column":13,"nodeType":"701","messageId":"702","endLine":32,"endColumn":21},{"ruleId":"699","severity":1,"message":"804","line":67,"column":13,"nodeType":"701","messageId":"702","endLine":67,"endColumn":21},{"ruleId":"699","severity":1,"message":"805","line":122,"column":15,"nodeType":"701","messageId":"702","endLine":122,"endColumn":20},{"ruleId":"806","severity":1,"message":"807","line":266,"column":53,"nodeType":"808","messageId":"763","endLine":266,"endColumn":66},{"ruleId":"699","severity":1,"message":"809","line":5,"column":8,"nodeType":"701","messageId":"702","endLine":5,"endColumn":18},{"ruleId":"699","severity":1,"message":"810","line":6,"column":8,"nodeType":"701","messageId":"702","endLine":6,"endColumn":13},{"ruleId":"699","severity":1,"message":"811","line":11,"column":10,"nodeType":"701","messageId":"702","endLine":11,"endColumn":17},{"ruleId":"699","severity":1,"message":"812","line":15,"column":7,"nodeType":"701","messageId":"702","endLine":15,"endColumn":14},{"ruleId":"699","severity":1,"message":"770","line":1,"column":17,"nodeType":"701","messageId":"702","endLine":1,"endColumn":26},{"ruleId":"699","severity":1,"message":"813","line":25,"column":8,"nodeType":"701","messageId":"702","endLine":25,"endColumn":14},{"ruleId":"699","severity":1,"message":"814","line":34,"column":8,"nodeType":"701","messageId":"702","endLine":34,"endColumn":18},{"ruleId":"761","severity":1,"message":"815","line":47,"column":26,"nodeType":"708","messageId":"763","endLine":47,"endColumn":28},{"ruleId":"699","severity":1,"message":"816","line":48,"column":17,"nodeType":"701","messageId":"702","endLine":48,"endColumn":25},{"ruleId":"699","severity":1,"message":"817","line":4,"column":33,"nodeType":"701","messageId":"702","endLine":4,"endColumn":39},{"ruleId":"699","severity":1,"message":"818","line":10,"column":10,"nodeType":"701","messageId":"702","endLine":10,"endColumn":20},{"ruleId":"699","severity":1,"message":"731","line":15,"column":7,"nodeType":"701","messageId":"702","endLine":15,"endColumn":16},{"ruleId":"728","severity":1,"message":"729","line":25,"column":13,"nodeType":"727","endLine":30,"endColumn":14},{"ruleId":"728","severity":1,"message":"729","line":77,"column":13,"nodeType":"727","endLine":82,"endColumn":14},{"ruleId":"761","severity":1,"message":"815","line":165,"column":30,"nodeType":"708","messageId":"763","endLine":165,"endColumn":32},{"ruleId":"699","severity":1,"message":"819","line":181,"column":17,"nodeType":"701","messageId":"702","endLine":181,"endColumn":32},{"ruleId":"699","severity":1,"message":"820","line":192,"column":15,"nodeType":"701","messageId":"702","endLine":192,"endColumn":28},{"ruleId":"699","severity":1,"message":"821","line":195,"column":15,"nodeType":"701","messageId":"702","endLine":195,"endColumn":28},{"ruleId":"699","severity":1,"message":"822","line":198,"column":15,"nodeType":"701","messageId":"702","endLine":198,"endColumn":31},{"ruleId":"699","severity":1,"message":"823","line":201,"column":15,"nodeType":"701","messageId":"702","endLine":201,"endColumn":32},{"ruleId":"699","severity":1,"message":"824","line":204,"column":15,"nodeType":"701","messageId":"702","endLine":204,"endColumn":35},{"ruleId":"728","severity":1,"message":"729","line":277,"column":37,"nodeType":"727","endLine":282,"endColumn":38},{"ruleId":"825","severity":1,"message":"826","line":5,"column":3,"nodeType":"827","messageId":"828","endLine":5,"endColumn":17,"fix":"829"},{"ruleId":"699","severity":1,"message":"731","line":6,"column":7,"nodeType":"701","messageId":"702","endLine":6,"endColumn":16},{"ruleId":"761","severity":1,"message":"762","line":40,"column":30,"nodeType":"708","messageId":"763","endLine":40,"endColumn":32},{"ruleId":"699","severity":1,"message":"830","line":2,"column":10,"nodeType":"701","messageId":"702","endLine":2,"endColumn":15},{"ruleId":"699","severity":1,"message":"831","line":3,"column":8,"nodeType":"701","messageId":"702","endLine":3,"endColumn":16},{"ruleId":"699","severity":1,"message":"832","line":5,"column":8,"nodeType":"701","messageId":"702","endLine":5,"endColumn":23},{"ruleId":"699","severity":1,"message":"833","line":11,"column":10,"nodeType":"701","messageId":"702","endLine":11,"endColumn":17},{"ruleId":"699","severity":1,"message":"834","line":11,"column":19,"nodeType":"701","messageId":"702","endLine":11,"endColumn":29},{"ruleId":"699","severity":1,"message":"731","line":16,"column":7,"nodeType":"701","messageId":"702","endLine":16,"endColumn":16},{"ruleId":"699","severity":1,"message":"712","line":161,"column":29,"nodeType":"701","messageId":"702","endLine":161,"endColumn":37},{"ruleId":"699","severity":1,"message":"742","line":175,"column":13,"nodeType":"701","messageId":"702","endLine":175,"endColumn":21},{"ruleId":"699","severity":1,"message":"700","line":177,"column":13,"nodeType":"701","messageId":"702","endLine":177,"endColumn":18},{"ruleId":"699","severity":1,"message":"743","line":178,"column":13,"nodeType":"701","messageId":"702","endLine":178,"endColumn":20},{"ruleId":"699","severity":1,"message":"712","line":179,"column":13,"nodeType":"701","messageId":"702","endLine":179,"endColumn":21},{"ruleId":"699","severity":1,"message":"744","line":180,"column":13,"nodeType":"701","messageId":"702","endLine":180,"endColumn":20},{"ruleId":"699","severity":1,"message":"745","line":181,"column":13,"nodeType":"701","messageId":"702","endLine":181,"endColumn":21},{"ruleId":"699","severity":1,"message":"746","line":183,"column":13,"nodeType":"701","messageId":"702","endLine":183,"endColumn":18},{"ruleId":"699","severity":1,"message":"747","line":184,"column":13,"nodeType":"701","messageId":"702","endLine":184,"endColumn":19},{"ruleId":"699","severity":1,"message":"835","line":189,"column":13,"nodeType":"701","messageId":"702","endLine":189,"endColumn":25},{"ruleId":"728","severity":1,"message":"836","line":218,"column":41,"nodeType":"727","endLine":221,"endColumn":42},{"ruleId":"728","severity":1,"message":"836","line":582,"column":53,"nodeType":"727","endLine":590,"endColumn":54},{"ruleId":"699","severity":1,"message":"731","line":16,"column":7,"nodeType":"701","messageId":"702","endLine":16,"endColumn":16},{"ruleId":"699","severity":1,"message":"733","line":20,"column":9,"nodeType":"701","messageId":"702","endLine":20,"endColumn":14},{"ruleId":"699","severity":1,"message":"816","line":21,"column":9,"nodeType":"701","messageId":"702","endLine":21,"endColumn":17},{"ruleId":"699","severity":1,"message":"781","line":22,"column":9,"nodeType":"701","messageId":"702","endLine":22,"endColumn":17},{"ruleId":"699","severity":1,"message":"782","line":23,"column":9,"nodeType":"701","messageId":"702","endLine":23,"endColumn":20},{"ruleId":"699","severity":1,"message":"783","line":25,"column":9,"nodeType":"701","messageId":"702","endLine":25,"endColumn":21},{"ruleId":"699","severity":1,"message":"837","line":26,"column":9,"nodeType":"701","messageId":"702","endLine":26,"endColumn":22},{"ruleId":"699","severity":1,"message":"838","line":32,"column":28,"nodeType":"701","messageId":"702","endLine":32,"endColumn":45},{"ruleId":"699","severity":1,"message":"839","line":33,"column":25,"nodeType":"701","messageId":"702","endLine":33,"endColumn":39},{"ruleId":"699","severity":1,"message":"840","line":34,"column":12,"nodeType":"701","messageId":"702","endLine":34,"endColumn":25},{"ruleId":"699","severity":1,"message":"841","line":34,"column":27,"nodeType":"701","messageId":"702","endLine":34,"endColumn":43},{"ruleId":"699","severity":1,"message":"842","line":40,"column":12,"nodeType":"701","messageId":"702","endLine":40,"endColumn":19},{"ruleId":"699","severity":1,"message":"712","line":65,"column":29,"nodeType":"701","messageId":"702","endLine":65,"endColumn":37},{"ruleId":"756","severity":1,"message":"776","line":69,"column":8,"nodeType":"777","endLine":69,"endColumn":10,"suggestions":"843"},{"ruleId":"699","severity":1,"message":"844","line":79,"column":9,"nodeType":"701","messageId":"702","endLine":79,"endColumn":13},{"ruleId":"699","severity":1,"message":"712","line":118,"column":29,"nodeType":"701","messageId":"702","endLine":118,"endColumn":37},{"ruleId":"765","severity":1,"message":"792","line":139,"column":43,"nodeType":"767","messageId":"768","endLine":139,"endColumn":45},{"ruleId":"765","severity":1,"message":"792","line":145,"column":66,"nodeType":"767","messageId":"768","endLine":145,"endColumn":68},{"ruleId":"728","severity":1,"message":"836","line":201,"column":45,"nodeType":"727","endLine":204,"endColumn":46},{"ruleId":"845","severity":1,"message":"846","line":668,"column":49,"nodeType":"847","messageId":"848","endLine":673,"endColumn":50},{"ruleId":"699","severity":1,"message":"849","line":3,"column":8,"nodeType":"701","messageId":"702","endLine":3,"endColumn":11},{"ruleId":"699","severity":1,"message":"850","line":4,"column":8,"nodeType":"701","messageId":"702","endLine":4,"endColumn":12},{"ruleId":"699","severity":1,"message":"851","line":5,"column":8,"nodeType":"701","messageId":"702","endLine":5,"endColumn":13},{"ruleId":"699","severity":1,"message":"852","line":9,"column":12,"nodeType":"701","messageId":"702","endLine":9,"endColumn":22},{"ruleId":"756","severity":1,"message":"776","line":26,"column":8,"nodeType":"777","endLine":26,"endColumn":10,"suggestions":"853"},{"ruleId":"761","severity":1,"message":"762","line":59,"column":65,"nodeType":"708","messageId":"763","endLine":59,"endColumn":67},{"ruleId":"761","severity":1,"message":"762","line":61,"column":71,"nodeType":"708","messageId":"763","endLine":61,"endColumn":73},{"ruleId":"761","severity":1,"message":"762","line":64,"column":71,"nodeType":"708","messageId":"763","endLine":64,"endColumn":73},{"ruleId":"761","severity":1,"message":"762","line":67,"column":71,"nodeType":"708","messageId":"763","endLine":67,"endColumn":73},{"ruleId":"699","severity":1,"message":"787","line":24,"column":11,"nodeType":"701","messageId":"702","endLine":24,"endColumn":15},{"ruleId":"699","severity":1,"message":"854","line":2,"column":8,"nodeType":"701","messageId":"702","endLine":2,"endColumn":17},{"ruleId":"699","severity":1,"message":"855","line":4,"column":10,"nodeType":"701","messageId":"702","endLine":4,"endColumn":16},{"ruleId":"699","severity":1,"message":"856","line":18,"column":11,"nodeType":"701","messageId":"702","endLine":18,"endColumn":14},{"ruleId":"765","severity":1,"message":"766","line":138,"column":70,"nodeType":"767","messageId":"768","endLine":138,"endColumn":72},{"ruleId":"765","severity":1,"message":"766","line":147,"column":52,"nodeType":"767","messageId":"768","endLine":147,"endColumn":54},{"ruleId":"699","severity":1,"message":"770","line":1,"column":17,"nodeType":"701","messageId":"702","endLine":1,"endColumn":26},{"ruleId":"699","severity":1,"message":"857","line":6,"column":10,"nodeType":"701","messageId":"702","endLine":6,"endColumn":18},{"ruleId":"693","replacedBy":"858"},{"ruleId":"695","replacedBy":"859"},{"ruleId":"699","severity":1,"message":"860","line":2,"column":8,"nodeType":"701","messageId":"702","endLine":2,"endColumn":17},{"ruleId":"699","severity":1,"message":"861","line":1,"column":8,"nodeType":"701","messageId":"702","endLine":1,"endColumn":13},{"ruleId":"699","severity":1,"message":"795","line":2,"column":27,"nodeType":"701","messageId":"702","endLine":2,"endColumn":36},{"ruleId":"699","severity":1,"message":"862","line":19,"column":15,"nodeType":"701","messageId":"702","endLine":19,"endColumn":31},{"ruleId":"765","severity":1,"message":"766","line":37,"column":28,"nodeType":"767","messageId":"768","endLine":37,"endColumn":30},{"ruleId":"699","severity":1,"message":"770","line":1,"column":17,"nodeType":"701","messageId":"702","endLine":1,"endColumn":26},{"ruleId":"699","severity":1,"message":"863","line":3,"column":8,"nodeType":"701","messageId":"702","endLine":3,"endColumn":16},{"ruleId":"699","severity":1,"message":"864","line":4,"column":10,"nodeType":"701","messageId":"702","endLine":4,"endColumn":13},{"ruleId":"699","severity":1,"message":"865","line":7,"column":8,"nodeType":"701","messageId":"702","endLine":7,"endColumn":17},{"ruleId":"699","severity":1,"message":"866","line":8,"column":10,"nodeType":"701","messageId":"702","endLine":8,"endColumn":20},{"ruleId":"699","severity":1,"message":"867","line":17,"column":9,"nodeType":"701","messageId":"702","endLine":17,"endColumn":16},{"ruleId":"699","severity":1,"message":"868","line":18,"column":9,"nodeType":"701","messageId":"702","endLine":18,"endColumn":19},{"ruleId":"756","severity":1,"message":"869","line":36,"column":8,"nodeType":"777","endLine":36,"endColumn":10,"suggestions":"870"},{"ruleId":"699","severity":1,"message":"731","line":10,"column":7,"nodeType":"701","messageId":"702","endLine":10,"endColumn":16},{"ruleId":"699","severity":1,"message":"721","line":15,"column":12,"nodeType":"701","messageId":"702","endLine":15,"endColumn":16},{"ruleId":"699","severity":1,"message":"751","line":15,"column":18,"nodeType":"701","messageId":"702","endLine":15,"endColumn":25},{"ruleId":"699","severity":1,"message":"752","line":16,"column":12,"nodeType":"701","messageId":"702","endLine":16,"endColumn":16},{"ruleId":"699","severity":1,"message":"753","line":16,"column":18,"nodeType":"701","messageId":"702","endLine":16,"endColumn":25},{"ruleId":"699","severity":1,"message":"871","line":19,"column":9,"nodeType":"701","messageId":"702","endLine":19,"endColumn":20},{"ruleId":"699","severity":1,"message":"872","line":20,"column":9,"nodeType":"701","messageId":"702","endLine":20,"endColumn":13},{"ruleId":"699","severity":1,"message":"873","line":21,"column":9,"nodeType":"701","messageId":"702","endLine":21,"endColumn":26},{"ruleId":"699","severity":1,"message":"874","line":24,"column":12,"nodeType":"701","messageId":"702","endLine":24,"endColumn":20},{"ruleId":"699","severity":1,"message":"875","line":24,"column":22,"nodeType":"701","messageId":"702","endLine":24,"endColumn":33},{"ruleId":"765","severity":1,"message":"766","line":60,"column":24,"nodeType":"767","messageId":"768","endLine":60,"endColumn":26},{"ruleId":"699","severity":1,"message":"876","line":76,"column":21,"nodeType":"701","messageId":"702","endLine":76,"endColumn":29},{"ruleId":"699","severity":1,"message":"877","line":77,"column":21,"nodeType":"701","messageId":"702","endLine":77,"endColumn":29},{"ruleId":"878","severity":1,"message":"879","line":80,"column":21,"nodeType":"701","messageId":"880","endLine":80,"endColumn":26},{"ruleId":"761","severity":1,"message":"762","line":95,"column":52,"nodeType":"708","messageId":"763","endLine":95,"endColumn":54},{"ruleId":"761","severity":1,"message":"762","line":99,"column":52,"nodeType":"708","messageId":"763","endLine":99,"endColumn":54},{"ruleId":"761","severity":1,"message":"762","line":100,"column":61,"nodeType":"708","messageId":"763","endLine":100,"endColumn":63},{"ruleId":"699","severity":1,"message":"769","line":136,"column":46,"nodeType":"701","messageId":"702","endLine":136,"endColumn":56},{"ruleId":"699","severity":1,"message":"731","line":10,"column":7,"nodeType":"701","messageId":"702","endLine":10,"endColumn":16},{"ruleId":"699","severity":1,"message":"732","line":16,"column":11,"nodeType":"701","messageId":"702","endLine":16,"endColumn":15},{"ruleId":"699","severity":1,"message":"881","line":17,"column":11,"nodeType":"701","messageId":"702","endLine":17,"endColumn":18},{"ruleId":"699","severity":1,"message":"733","line":9,"column":9,"nodeType":"701","messageId":"702","endLine":9,"endColumn":14},{"ruleId":"699","severity":1,"message":"816","line":10,"column":9,"nodeType":"701","messageId":"702","endLine":10,"endColumn":17},{"ruleId":"699","severity":1,"message":"781","line":11,"column":9,"nodeType":"701","messageId":"702","endLine":11,"endColumn":17},{"ruleId":"699","severity":1,"message":"782","line":12,"column":9,"nodeType":"701","messageId":"702","endLine":12,"endColumn":20},{"ruleId":"699","severity":1,"message":"837","line":15,"column":9,"nodeType":"701","messageId":"702","endLine":15,"endColumn":22},{"ruleId":"699","severity":1,"message":"882","line":16,"column":9,"nodeType":"701","messageId":"702","endLine":16,"endColumn":16},{"ruleId":"699","severity":1,"message":"883","line":17,"column":9,"nodeType":"701","messageId":"702","endLine":17,"endColumn":19},{"ruleId":"699","severity":1,"message":"700","line":20,"column":12,"nodeType":"701","messageId":"702","endLine":20,"endColumn":17},{"ruleId":"699","severity":1,"message":"884","line":20,"column":19,"nodeType":"701","messageId":"702","endLine":20,"endColumn":27},{"ruleId":"699","severity":1,"message":"885","line":21,"column":12,"nodeType":"701","messageId":"702","endLine":21,"endColumn":26},{"ruleId":"699","severity":1,"message":"838","line":21,"column":28,"nodeType":"701","messageId":"702","endLine":21,"endColumn":45},{"ruleId":"699","severity":1,"message":"886","line":22,"column":12,"nodeType":"701","messageId":"702","endLine":22,"endColumn":23},{"ruleId":"699","severity":1,"message":"839","line":22,"column":25,"nodeType":"701","messageId":"702","endLine":22,"endColumn":39},{"ruleId":"699","severity":1,"message":"840","line":23,"column":12,"nodeType":"701","messageId":"702","endLine":23,"endColumn":25},{"ruleId":"699","severity":1,"message":"887","line":27,"column":12,"nodeType":"701","messageId":"702","endLine":27,"endColumn":24},{"ruleId":"699","severity":1,"message":"888","line":27,"column":26,"nodeType":"701","messageId":"702","endLine":27,"endColumn":41},{"ruleId":"699","severity":1,"message":"889","line":28,"column":12,"nodeType":"701","messageId":"702","endLine":28,"endColumn":28},{"ruleId":"699","severity":1,"message":"890","line":28,"column":30,"nodeType":"701","messageId":"702","endLine":28,"endColumn":49},{"ruleId":"699","severity":1,"message":"842","line":29,"column":12,"nodeType":"701","messageId":"702","endLine":29,"endColumn":19},{"ruleId":"699","severity":1,"message":"891","line":29,"column":21,"nodeType":"701","messageId":"702","endLine":29,"endColumn":31},{"ruleId":"699","severity":1,"message":"712","line":52,"column":29,"nodeType":"701","messageId":"702","endLine":52,"endColumn":37},{"ruleId":"756","severity":1,"message":"892","line":56,"column":8,"nodeType":"777","endLine":56,"endColumn":10,"suggestions":"893"},{"ruleId":"756","severity":1,"message":"894","line":70,"column":8,"nodeType":"777","endLine":70,"endColumn":10,"suggestions":"895"},{"ruleId":"699","severity":1,"message":"896","line":39,"column":10,"nodeType":"701","messageId":"702","endLine":39,"endColumn":18},{"ruleId":"699","severity":1,"message":"897","line":6,"column":10,"nodeType":"701","messageId":"702","endLine":6,"endColumn":14},{"ruleId":"699","severity":1,"message":"738","line":6,"column":16,"nodeType":"701","messageId":"702","endLine":6,"endColumn":25},{"ruleId":"699","severity":1,"message":"898","line":8,"column":7,"nodeType":"701","messageId":"702","endLine":8,"endColumn":17},{"ruleId":"699","severity":1,"message":"714","line":2,"column":8,"nodeType":"701","messageId":"702","endLine":2,"endColumn":14},{"ruleId":"699","severity":1,"message":"731","line":7,"column":7,"nodeType":"701","messageId":"702","endLine":7,"endColumn":16},{"ruleId":"756","severity":1,"message":"899","line":102,"column":8,"nodeType":"777","endLine":108,"endColumn":6,"suggestions":"900"},{"ruleId":"699","severity":1,"message":"901","line":2,"column":8,"nodeType":"701","messageId":"702","endLine":2,"endColumn":12},{"ruleId":"699","severity":1,"message":"902","line":3,"column":8,"nodeType":"701","messageId":"702","endLine":3,"endColumn":13},{"ruleId":"699","severity":1,"message":"903","line":4,"column":8,"nodeType":"701","messageId":"702","endLine":4,"endColumn":13},{"ruleId":"699","severity":1,"message":"809","line":5,"column":8,"nodeType":"701","messageId":"702","endLine":5,"endColumn":18},{"ruleId":"699","severity":1,"message":"904","line":8,"column":10,"nodeType":"701","messageId":"702","endLine":8,"endColumn":15},{"ruleId":"699","severity":1,"message":"905","line":38,"column":10,"nodeType":"701","messageId":"702","endLine":38,"endColumn":23},{"ruleId":"699","severity":1,"message":"805","line":43,"column":11,"nodeType":"701","messageId":"702","endLine":43,"endColumn":16},{"ruleId":"699","severity":1,"message":"901","line":2,"column":8,"nodeType":"701","messageId":"702","endLine":2,"endColumn":12},{"ruleId":"699","severity":1,"message":"797","line":2,"column":28,"nodeType":"701","messageId":"702","endLine":2,"endColumn":36},{"ruleId":"699","severity":1,"message":"795","line":2,"column":38,"nodeType":"701","messageId":"702","endLine":2,"endColumn":47},{"ruleId":"699","severity":1,"message":"906","line":6,"column":10,"nodeType":"701","messageId":"702","endLine":6,"endColumn":15},{"ruleId":"699","severity":1,"message":"907","line":6,"column":17,"nodeType":"701","messageId":"702","endLine":6,"endColumn":23},{"ruleId":"699","severity":1,"message":"718","line":6,"column":25,"nodeType":"701","messageId":"702","endLine":6,"endColumn":29},{"ruleId":"699","severity":1,"message":"908","line":7,"column":8,"nodeType":"701","messageId":"702","endLine":7,"endColumn":22},{"ruleId":"699","severity":1,"message":"909","line":8,"column":8,"nodeType":"701","messageId":"702","endLine":8,"endColumn":16},{"ruleId":"699","severity":1,"message":"731","line":11,"column":7,"nodeType":"701","messageId":"702","endLine":11,"endColumn":16},{"ruleId":"699","severity":1,"message":"733","line":45,"column":13,"nodeType":"701","messageId":"702","endLine":45,"endColumn":18},{"ruleId":"699","severity":1,"message":"734","line":46,"column":13,"nodeType":"701","messageId":"702","endLine":46,"endColumn":21},{"ruleId":"699","severity":1,"message":"721","line":49,"column":13,"nodeType":"701","messageId":"702","endLine":49,"endColumn":17},{"ruleId":"699","severity":1,"message":"910","line":50,"column":13,"nodeType":"701","messageId":"702","endLine":50,"endColumn":27},{"ruleId":"699","severity":1,"message":"911","line":51,"column":13,"nodeType":"701","messageId":"702","endLine":51,"endColumn":18},{"ruleId":"728","severity":1,"message":"836","line":212,"column":37,"nodeType":"727","endLine":217,"endColumn":38},{"ruleId":"765","severity":1,"message":"793","line":21,"column":44,"nodeType":"767","messageId":"794","endLine":21,"endColumn":46},{"ruleId":"765","severity":1,"message":"792","line":23,"column":47,"nodeType":"767","messageId":"768","endLine":23,"endColumn":49},{"ruleId":"761","severity":1,"message":"762","line":24,"column":49,"nodeType":"708","messageId":"763","endLine":24,"endColumn":51},{"ruleId":"765","severity":1,"message":"766","line":86,"column":40,"nodeType":"767","messageId":"768","endLine":86,"endColumn":42},{"ruleId":"765","severity":1,"message":"912","line":101,"column":68,"nodeType":"767","messageId":"794","endLine":101,"endColumn":70},{"ruleId":"699","severity":1,"message":"913","line":117,"column":33,"nodeType":"701","messageId":"702","endLine":117,"endColumn":45},{"ruleId":"699","severity":1,"message":"914","line":118,"column":33,"nodeType":"701","messageId":"702","endLine":118,"endColumn":46},{"ruleId":"699","severity":1,"message":"730","line":5,"column":8,"nodeType":"701","messageId":"702","endLine":5,"endColumn":19},{"ruleId":"699","severity":1,"message":"915","line":9,"column":10,"nodeType":"701","messageId":"702","endLine":9,"endColumn":19},{"ruleId":"699","severity":1,"message":"731","line":13,"column":7,"nodeType":"701","messageId":"702","endLine":13,"endColumn":16},{"ruleId":"699","severity":1,"message":"733","line":17,"column":9,"nodeType":"701","messageId":"702","endLine":17,"endColumn":14},{"ruleId":"699","severity":1,"message":"816","line":18,"column":9,"nodeType":"701","messageId":"702","endLine":18,"endColumn":17},{"ruleId":"699","severity":1,"message":"781","line":19,"column":9,"nodeType":"701","messageId":"702","endLine":19,"endColumn":17},{"ruleId":"699","severity":1,"message":"782","line":20,"column":9,"nodeType":"701","messageId":"702","endLine":20,"endColumn":20},{"ruleId":"699","severity":1,"message":"783","line":22,"column":9,"nodeType":"701","messageId":"702","endLine":22,"endColumn":21},{"ruleId":"699","severity":1,"message":"712","line":44,"column":33,"nodeType":"701","messageId":"702","endLine":44,"endColumn":41},{"ruleId":"756","severity":1,"message":"785","line":51,"column":8,"nodeType":"777","endLine":51,"endColumn":10,"suggestions":"916"},{"ruleId":"699","severity":1,"message":"712","line":94,"column":29,"nodeType":"701","messageId":"702","endLine":94,"endColumn":37},{"ruleId":"728","severity":1,"message":"836","line":123,"column":33,"nodeType":"727","endLine":127,"endColumn":34},{"ruleId":"699","severity":1,"message":"797","line":54,"column":17,"nodeType":"701","messageId":"702","endLine":54,"endColumn":25},{"ruleId":"699","severity":1,"message":"731","line":58,"column":7,"nodeType":"701","messageId":"702","endLine":58,"endColumn":16},{"ruleId":"699","severity":1,"message":"795","line":2,"column":27,"nodeType":"701","messageId":"702","endLine":2,"endColumn":36},{"ruleId":"761","severity":1,"message":"762","line":20,"column":32,"nodeType":"708","messageId":"763","endLine":20,"endColumn":34},{"ruleId":"761","severity":1,"message":"762","line":63,"column":44,"nodeType":"708","messageId":"763","endLine":63,"endColumn":46},{"ruleId":"761","severity":1,"message":"762","line":65,"column":23,"nodeType":"708","messageId":"763","endLine":65,"endColumn":25},{"ruleId":"699","severity":1,"message":"812","line":11,"column":7,"nodeType":"701","messageId":"702","endLine":11,"endColumn":14},{"ruleId":"699","severity":1,"message":"732","line":8,"column":12,"nodeType":"701","messageId":"702","endLine":8,"endColumn":16},{"ruleId":"699","severity":1,"message":"917","line":8,"column":18,"nodeType":"701","messageId":"702","endLine":8,"endColumn":25},{"ruleId":"756","severity":1,"message":"776","line":24,"column":8,"nodeType":"777","endLine":24,"endColumn":10,"suggestions":"918"},{"ruleId":"699","severity":1,"message":"919","line":55,"column":41,"nodeType":"701","messageId":"702","endLine":55,"endColumn":57},{"ruleId":"765","severity":1,"message":"793","line":57,"column":63,"nodeType":"767","messageId":"794","endLine":57,"endColumn":65},{"ruleId":"761","severity":1,"message":"762","line":58,"column":58,"nodeType":"708","messageId":"763","endLine":58,"endColumn":60},{"ruleId":"761","severity":1,"message":"762","line":71,"column":70,"nodeType":"708","messageId":"763","endLine":71,"endColumn":72},{"ruleId":"761","severity":1,"message":"762","line":74,"column":76,"nodeType":"708","messageId":"763","endLine":74,"endColumn":78},{"ruleId":"761","severity":1,"message":"762","line":77,"column":76,"nodeType":"708","messageId":"763","endLine":77,"endColumn":78},{"ruleId":"761","severity":1,"message":"762","line":80,"column":76,"nodeType":"708","messageId":"763","endLine":80,"endColumn":78},{"ruleId":"699","severity":1,"message":"920","line":8,"column":7,"nodeType":"701","messageId":"702","endLine":8,"endColumn":10},"no-native-reassign",["921"],"no-negated-in-lhs",["922"],["921"],["922"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'hidden' is assigned a value but never used.",["921"],["922"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'fileName' is assigned a value but never used.","'setFileName' is assigned a value but never used.","'Select' is defined but never used.",["921"],["922"],"'imageOverlay' is defined but never used.","'Link' is defined but never used.","'styles' is assigned a value but never used.","'shadow' is assigned a value but never used.","'flag' is assigned a value but never used.","'setFlag' is assigned a value but never used.","'onMouseEnter' is assigned a value but never used.","'onMouseLeave' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'FormTextBox' is defined but never used.","'ipAddress' is assigned a value but never used.","'data' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.",["921"],["922"],"'React' is defined but never used.","'showModal' is assigned a value but never used.","'process' is assigned a value but never used.","'material' is assigned a value but never used.","'title' is assigned a value but never used.","'userinfo' is assigned a value but never used.","'loading' is assigned a value but never used.","'fileURL' is assigned a value but never used.","'filePath' is assigned a value but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setflag' is assigned a value but never used.","'path' is assigned a value but never used.","'setpath' is assigned a value but never used.","'location' is assigned a value but never used.","'cookieData' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'projectList' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'filterProjectList' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'handleDelete' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'dateString' is assigned a value but never used.","'Component' is defined but never used.","'faUser' is defined but never used.","'faChevronDown' is defined but never used.","'OverallRatings' is defined but never used.","'OtherServices' is defined but never used.","'overallRatingArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["923"],"'hub' is assigned a value but never used.",["924"],"'lastName' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'profileImage' is assigned a value but never used.","'firstName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'customerID'. Either include it or remove the dependency array.",["925"],"'post' is assigned a value but never used.",["921"],["922"],"'Alert' is defined but never used.","'rgbToHex' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useEffect' is defined but never used.","'react' is defined but never used.","'useState' is defined but never used.","React Hook useEffect contains a call to 'setMap'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["926"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["927"],"'classes' is assigned a value but never used.","'ExpandTable' is defined but never used.","'document' is assigned a value but never used.","'style' is assigned a value but never used.","no-dupe-keys","Duplicate key 'contactPerson'.","ObjectExpression","'Technology' is defined but never used.","'About' is defined but never used.","'Overlay' is defined but never used.","'cookies' is assigned a value but never used.","'Footer' is defined but never used.","'OpenStreet' is defined but never used.","Expected '!==' and instead saw '!='.","'userName' is assigned a value but never used.","'scroll' is defined but never used.","'useCookies' is defined but never used.","'currentPageName' is assigned a value but never used.","'navBrandClass' is assigned a value but never used.","'aboutUsActive' is assigned a value but never used.","'howItWorksActive' is assigned a value but never used.","'manufactureActive' is assigned a value but never used.","'featureProjectActive' is assigned a value but never used.","no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"928","text":"929"},"'Modal' is defined but never used.","'ckeditor' is defined but never used.","'ReactHtmlParser' is defined but never used.","'faImage' is defined but never used.","'faTrashAlt' is defined but never used.","'previewImage' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'contactPerson' is assigned a value but never used.","'setRegisteredHubs' is assigned a value but never used.","'setServiceList' is assigned a value but never used.","'uploadedImage' is assigned a value but never used.","'setUploadedImage' is assigned a value but never used.","'isExist' is assigned a value but never used.",["930"],"'list' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Foo' is defined but never used.","'data' is defined but never used.","'Table' is defined but never used.","'savedItems' is assigned a value but never used.",["931"],"'TextField' is defined but never used.","'faEdit' is defined but never used.","'col' is assigned a value but never used.","'faDivide' is defined but never used.",["921"],["922"],"'PropTypes' is defined but never used.","'axios' is defined but never used.","'manufacturerInfo' is assigned a value but never used.","'Carousel' is defined but never used.","'map' is defined but never used.","'ImageZoom' is defined but never used.","'ModalTitle' is defined but never used.","'dateObj' is defined but never used.","'dateString' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params' and 'title'. Either include them or remove the dependency array.",["932"],"'projectList' is defined but never used.","'bool' is defined but never used.","'filterProjectList' is defined but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'FileName' is assigned a value but never used.","'FilePath' is assigned a value but never used.","no-redeclare","'files' is already defined.","redeclared","'history' is assigned a value but never used.","'Website' is assigned a value but never used.","'userStatus' is assigned a value but never used.","'setError' is assigned a value but never used.","'registeredHubs' is assigned a value but never used.","'serviceList' is assigned a value but never used.","'showAddField' is assigned a value but never used.","'setShowAddField' is assigned a value but never used.","'saveChangeButton' is assigned a value but never used.","'setSaveChangeButton' is assigned a value but never used.","'setIsExist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'manufacturerID'. Either include it or remove the dependency array.",["933"],"React Hook useEffect has missing dependencies: 'Image' and 'profileImage'. Either include them or remove the dependency array.",["934"],"'ViewDown' is defined but never used.","'show' is assigned a value but never used.","'iconStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'parentCallback'. Either include it or remove the dependency array. If 'parentCallback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["935"],"'logo' is defined but never used.","'logo1' is defined but never used.","'logo2' is defined but never used.","'title' is defined but never used.","'mirrorSection' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ForgotPassword' is defined but never used.","'Register' is defined but never used.","'loggedInStatus' is assigned a value but never used.","'props' is assigned a value but never used.","Array.prototype.filter() expects a return value from arrow function.","'materialList' is assigned a value but never used.","'materialExist' is assigned a value but never used.","'faWindows' is defined but never used.",["936"],"'setData' is assigned a value but never used.",["937"],"'Delivery_Address' is assigned a value but never used.","'eye' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"938","fix":"939"},{"desc":"938","fix":"940"},{"desc":"941","fix":"942"},{"desc":"943","fix":"944"},{"desc":"945","fix":"946"},[112,126],"isAuth",{"desc":"938","fix":"947"},{"desc":"938","fix":"948"},{"desc":"949","fix":"950"},{"desc":"951","fix":"952"},{"desc":"953","fix":"954"},{"desc":"955","fix":"956"},{"desc":"941","fix":"957"},{"desc":"938","fix":"958"},"Update the dependencies array to be: [id]",{"range":"959","text":"960"},{"range":"961","text":"960"},"Update the dependencies array to be: [customerID]",{"range":"962","text":"963"},"Add dependencies array: []",{"range":"964","text":"965"},"Update the dependencies array to be: [position, props]",{"range":"966","text":"967"},{"range":"968","text":"960"},{"range":"969","text":"960"},"Update the dependencies array to be: [props.match.params, title]",{"range":"970","text":"971"},"Update the dependencies array to be: [manufacturerID]",{"range":"972","text":"973"},"Update the dependencies array to be: [Image, profileImage]",{"range":"974","text":"975"},"Update the dependencies array to be: [selectedFabrication, selectedMaterial, selectedQuantity, selectedThickness, hublist, parentCallback]",{"range":"976","text":"977"},{"range":"978","text":"963"},{"range":"979","text":"960"},[1811,1813],"[id]",[2769,2771],[1331,1333],"[customerID]",[448,448],", []",[520,530],"[position, props]",[2847,2849],[915,917],[1303,1305],"[props.match.params, title]",[2226,2228],"[manufacturerID]",[2552,2554],"[Image, profileImage]",[2829,2967],"[selectedFabrication, selectedMaterial, selectedQuantity, selectedThickness, hublist, parentCallback]",[1770,1772],[841,843]]